{
    "hu": {
      "s-oops": "Hoppá!",
      "s-404": "Ez elkeveredhetett valahova : o",
      "s-signup-cover-h2": "Iratkozz fel a levelezési listámra!",
      "s-signup-cover-h1": "Megérdemled a legjobb cuccokat",
      "s-email-title-03": "The Beauty that Surrounds Us",
      "s-email-date-03": "2018 július 12.",
      "s-email-title-02": "The Bad in the Good",
      "s-email-date-02": "2018 június 27.",
      "s-email-title-01": "Celebrating my website launch with new paintings!",
      "s-email-date-01": "2018 június 16.",
      "s-navigation-name": "Toth Lorant",
      "s-navigation-my-story": "Történetem",
      "s-navigation-projects": "Projektjeim",
      "s-navigation-resume": "Önéletrajzom",
      "s-navigation-mailing-list": "Hírlevél listám",
      "s-cookiebar-content": "Weboldalam cookie-kat használ.",
      "s-cookiebar-details": "Bővebben",
      "s-cookiebar-accept": "Elfogadom",
      "s-emailform-title": "Értesülj az új feltöltésekről!",
      "s-emailform-p": "Ha szeretnél elsők közt értesülni a feltöltéseimről, és kíváncsi vagy a munkáim mögötti történetekre, akkor mindenképpen iratkozz fel a hírlevelemre!\nMeglehet, hogy időnként exkluzív tartalmat is küldök.",
      "s-emailform-email": "Erre az email címre küldöm",
      "s-emailform-nickname": "Így foglak szólítani",
      "s-emailform-cta": "Feliratkozom!",
      "s-emailform-hide": "Ne mutasd többet",
      "s-articlepreview-art-title": "Rajzaim és<br>festményeim",
      "s-articlepreview-design-title": "Moduláris megközelítés<br>digitális terméktervezésben",
      "s-articlepreview-dd-title": "Daydreaming:<br>Ébren álmodva",
      "s-articlepreview-ds-title": "The Divided Soul:<br>Fantasy tájképek",
      "s-articlepreview-td-title": "Grafit- és szén<br>portrérajzaim",
      "s-articlepreview-mdwds-title": "Moduláris tervezés<br>design rendszerekkel",
      "s-articlepreview-tcds-title": "A Chameleon<br>Design Rendszer",
      "s-articlepreview-project-cta": "Tovább a projekthez",
      "s-articlepreview-projects-cta": "Tovább a projektekhez",
      "s-articledisplay-caption-source": "Kép forrása",
      "s-mystory-title": "Szia! Lóránt vagyok.",
      "s-mystory-subtitle": "Letisztult felhasználói felületeket tervezek online termékek számára.",
      "s-mystory-p1": "Habár ez nem volt mindig így. Néhány éve még concept artist szerettem volna lenni, hogy menő filmeken és játékokon dolgozhassak. Nagyon szeretek rajzolni, \nde az utóbbi években rájöttem, hogy nem szeretném hivatásként űzni.",
      "s-mystory-p2": "Ahogy elkezdtem ismerkedni a product design szakmával, egyre nyilvánvalóbbá vált számomra, hogy megtaláltam a területemet. Régóta közel áll hozzám a webes \ntervezés, de őszintén szólva a kódolás sosem volt az erősségem, és visszavett a lelkesedésemből, hogy a terveket nem tudtam úgy életre kelteni, ahogyan azokat \nmegálmodtam. Ahogy elkezdtem product designerként dolgozni, ez a problémám megoldódott, hiszen a felület front-end fejlesztői gondoskodtak erről.",
      "s-mystory-p3": "Azonban rövidesen rájöttem, hogy ahhoz, hogy igazán kifinomult és technológiailag is átgondolt terveket tudjak készíteni, elengedhetetlen a HTML, CSS és JavaScript \nalapszintű ismerete. Ennek két oka is van: tervezésnél fontos tekintettel lenni a design kódszintű implementálására, vagyis arra, hogy milyen módszerekkel \nlesz megvalósítható az általam tervezett látványterv. Másrészt pedig annak ellenére, hogy egyre jobb prototípuskészítő alkalmazások jelennek meg a piacon, \nmég mindig nehézkes velük a reszponzív layoutok, valamint az interakciókon alapuló felületek prezentálása.",
      "s-mystory-p4": "Így kezdtem el jópár év kihagyás után ismét kódolni szabadidőmben. Még van hova fejlődnöm, azonban már most érzem, hogy mennyivel egységesebb megoldásokat \ntudok tervezni, miközben nagy figyelmet fordítok a design rendszerszintű megtervezésére. Ezt a front-end fejlesztők is értékelni szokták, én pedig sokkal gyorsabban \ntudok ezáltal dolgozni, így mégtöbb izgalmas kihívás elé állítva őket :o",
      "s-mystory-caption-design": "    Éppen végzem az egyetemen, ahol szakdolgozatom témájának a moduláris tervezést választottam. Ha érdekel egy könnyed olvasmány nagyszerű forrásokkal \n    arról, hogy hogyan tört be a modularitás a szoftverfejlesztésbe, majd a webes design folyamatokba, akkor ajánlom figyelmedbe.",
      "s-mystory-caption-art": "    Ha pedig a rajzaim érdekelnek, amiket szabadidőmben szoktam firkálgatni, itt megtalálod őket, és ha szívesen használnád háttérképként valamelyiket, \n    le is töltheted fullHD felbontásban.",
      "s-mystory-thanksforvisit": "Nagyon örülök a látogatásodnak. Tartsuk a kapcsolatot!",
      "s-daydreaming-title": "Daydreaming",
      "s-dividedsoul-title": "The Divided Soul",
      "s-portraitart-title": "Grafit- és szénrajzaim",
      "s-art-see-all": "Mind a",
      "s-art-artworks": "rajz megtekintése",
      "s-art-daydreaming-description": "Figurális festészeti projekt aranyos állatokkal és hangulatos fényekkel.",
      "s-art-dividedsoul-description": "Egy lenyűgöző, képzeletbeli világ bemutatása fantasy tájképeken keresztül.",
      "s-art-portraitart-description": "Hagyományos, szabadkézi rajzok Pinterest portrékról a legjobb chillout számokkal.",
      "s-artsubpage-to-artworks": "Vissza a rajzokhoz",
      "s-artsubpage-to-story": "Olvasd el a történetet",
      "s-dd-about-p1": "A Daydreaming egy spontán kísérletezés eredményeként jött létre. Nem projektnek terveztem, hanem egyedülálló rajznak. 2016 nyarán kezdődött;\nsok időm volt napközben, és le akartam foglalni magamat. Nagyon szeretem a Divided Soul színes világát, de ekkor kezdett egy kicsit sok lenni.\nKi akartam próbálni valami újat, ami mozgalmasabb, emberközelibb.",
      "s-dd-about-p2": "Egy gyenge minőségű Pinterest képpel kezdődött, ami arra pont elég volt, hogy kiindulást adjon a koncepcióhoz. Az első festményt 3 nap alatt\nfejeztem be, reggeltől estig dolgoztam rajta. Annyira élveztem, hogy rá pár napra elkezdtem a következőt, és egy héttel később az is elkészült.\nA harmadik a Bad Karma volt, a széria ikonikus képe, amivel azóta számtalan helyen találkoztam.",
      "s-dd-about-p3": "Azonban idővel elkezdtem eltávolodni az eredeti hangulattól, és nem jó irányba. A sorozat egyre színesebb lett, a koncepció pedig egyre\nerőltetettebb. Emiatt pár festményt kivettem belőle, de egyelőre a\n<a target=\"blank\" href=\"https://lorantart.deviantart.com/\" class=\"t-article--sliding__a\">DeviantArt oldalamon</a> fent vannak. Sajnos \nmár nem tudok ugyanazzal az intenzitással dolgozni rajta, amivel kezdtem, de ezt tartom a legeredetibb projektemnek, és azon dolgozok, hogy \nvisszatereljem abba az irányba, ahonnan indult.",
      "s-dd-07-title": "In My Mind",
      "s-dd-07-date": "2018 június",
      "s-dd-06-title": "Bad Karma",
      "s-dd-06-date": "2016 augusztus",
      "s-dd-05-title": "Daydreaming",
      "s-dd-05-date": "2016 július",
      "s-dd-04-title": "Daydream",
      "s-dd-04-date": "2016 július",
      "s-dd-03-title": "Stressed Out",
      "s-dd-03-date": "2016 október",
      "s-dd-02-title": "Light of Hope",
      "s-dd-02-date": "2016 december",
      "s-dd-01-title": "Catch and Release",
      "s-dd-01-date": "2017 február",
      "s-ds-about-p1": "A Divided Soul egy fantasy stílusú, digitális illusztrációkból álló sorozat, amit 2015 nyarának végén kezdtem el, és a mai napig dolgozom rajta.\nEgy gyakorló projektnek indult, amihez az inspirációt <a target=\"blank\" href=\"http://noahbradley.com\" class=\"t-article--sliding__a\">Noah Bradley: \nThe Sin of Man</a> kollekciója adta. Az utóbbi évek alatt rengeteget  fejlődtem, és a projekt is sokat haladt előre, így az idő folyamán kiírtam \nbelőle festményeket, amikről úgy gondoltam, hogy kevésbé illenek az általam elképzelt világba. Ha érdekelnek, még megtalálod őket \n<a target=\"blank\" href=\"https://lorantart.deviantart.com/\" class=\"t-article--sliding__a\">a DeviantArt profilomon</a>.",
      "s-ds-about-p2": "A Divided Soul nagyon közel áll a szívemhez, de nem tartom többnek egy hobbiprojektnél. Örülök, ha minél több emberhez eljut, de azon kívül, \nhogy kiélem a kreativitásomat és lekötöm az álmodozásomat, nincs semmi különleges tervem vele. Éppen ezért, a teljes széria szabadon letölthető \nés <a target=\"blank\" href=\"https://lorantart.deviantart.com/\" class=\"t-article--sliding__a\">bizonyos korlátok közt felhasználható</a>.",
      "s-ds-about-p3": "Nagyon sokat köszönhetek napjaink nyílt és segítőkész alkotói közösségének, és úgy gondolom, hogy ez mindenkinek megadja a lehetőséget, hogy \nkellő elszántsággal beteljesítse álmait. Továbbá a 9GAG seregének, ahol a Divided Soul \n<a target=\"blank\" href=\"https://9gag.com/gag/a8MqeAd\" class=\"t-article--sliding__a\">nagyon meleg fogadtatásban részesült</a>.",
      "s-ds-about-p4": "Ha tetszenek a munkáim, az övékét is biztosan inspirálónak találod majd:\n<a target=\"blank\" href=\"https://artstation.com/kimagu\"        class=\"t-article--sliding__a\">Kimagu</a>,\n<a target=\"blank\" href=\"https://morippin.deviantart.com\"      class=\"t-article--sliding__a\">Morippin</a>,\n<a target=\"blank\" href=\"https://artstation.com/danyiart\"      class=\"t-article--sliding__a\">DanyiArt</a>,\n<a target=\"blank\" href=\"https://artstation.com/markmolnar\"    class=\"t-article--sliding__a\">Molnar Mark</a>,\n<a target=\"blank\" href=\"https://artstation.com/jotto\"         class=\"t-article--sliding__a\">Otto Szatmari</a>,\n<a target=\"blank\" href=\"https://artstation.com/jordangrimmer\" class=\"t-article--sliding__a\">Jordan Grimmer</a>,\n<a target=\"blank\" href=\"https://artstation.com/noahbradley\"   class=\"t-article--sliding__a\">Noah Bradley</a>.",
      "s-ds-13-title": "Path of Destruction",
      "s-ds-13-date": "2017 július",
      "s-ds-12-title": "Awakening",
      "s-ds-12-date": "2017 november",
      "s-ds-11-title": "Born of a Magnificient Creature",
      "s-ds-11-date": "2016 augusztus",
      "s-ds-10-title": "Neverland",
      "s-ds-10-date": "2016 december",
      "s-ds-09-title": "Wisp Hunter",
      "s-ds-09-date": "2016 november",
      "s-ds-08-title": "Master's Call",
      "s-ds-08-date": "2016 március",
      "s-ds-07-title": "Still and Silent",
      "s-ds-07-date": "2017 január",
      "s-ds-06-title": "Lost Shores",
      "s-ds-06-date": "2016 július",
      "s-ds-05-title": "Worlds",
      "s-ds-05-date": "2016 december",
      "s-ds-04-title": "Guardian of eternity",
      "s-ds-04-date": "2016 április",
      "s-ds-03-title": "Heart of the Mountain",
      "s-ds-03-date": "2016 augusztus",
      "s-ds-02-title": "Valley of Legends",
      "s-ds-02-date": "2016 január",
      "s-ds-01-title": "Entrance of a New World",
      "s-ds-01-date": "2016 május",
      "s-td-about-p1": "Az utóbbi pár év alatt legalább száz portrét rajzoltam grafittal. Emlékszem, mennyire nehezen kezdődött - szinte mindent rosszul csináltam.\nMajd az egyik egészen jól sikerült, úgyhogy megálltam egy percre, és elgondolkodtam, hogy mit csináltam másképp, mint korábban. Ekkor jöttem rá,\nhogy a rajz nem fénykép, ezért nem is szabad úgy tekinteni rá. Mindig is használtam referenciaképeket, de túlzottan ragaszkodtam a látvány\nmegörökítéséhez.",
      "s-td-about-p2": "Számomra egy rajz akkor sikerül jól, ha el tud rugaszkodni a referenciaképtől annyira, hogy ha nem egymás mellett látod a kettőt, akkor nem\ntűnik fel a hasonlóság, és természetesen emellett helytáll téma, kompozíció, anatómia és tónusozás terén. Ez nem könnyű feladat, és habár \nszereztem némi gyakorlatot az utóbbi években, a mai napig küszködöm ezzel - annyira, hogy nagyjából minden tizedik rajzom éri el ezt a szintet.\nA többi a kellemes (de frusztráló) gyakorlás kategóriába esik, és a fiókom mélyén végzik, hogy soha senki ne lássa őket :)\n<a target=\"blank\" href=\"https://instagram.com/lorantart\" class=\"t-article--sliding__a\">(Na jó, talán Instagramra felkerül egy-egy közülük)</a>.",
      "s-td-about-p3": "A következő művészek nagy hatással voltak rám, és nagyon sokat tanultam tőlük:\n<a target=\"blank\" href=\"http://proko.com/\"          class=\"t-article--sliding__a\">Stan Prokopenko</a>,\n<a target=\"blank\" href=\"http://stevehustonart.com/\" class=\"t-article--sliding__a\">Steve Huston</a>,\n<a target=\"blank\" href=\"http://caseybaugh.com/\"     class=\"t-article--sliding__a\">Casey Baugh</a>,\n<a target=\"blank\" href=\"http://redrabbit7.com/\"     class=\"t-article--sliding__a\">Jeremy Mann</a>,\n<a target=\"blank\" href=\"http://alpayefe.com/\"       class=\"t-article--sliding__a\">Alpay Efe</a>.",
      "s-td-about-p4": "A rajzok arról a számról kapták a címüket, amiket készítésük közben hallgattam.",
      "s-td-14-title": "Let Me Down Slowly",
      "s-td-14-date": "2018 június",
      "s-td-13-title": "Miami 2 Ibiza",
      "s-td-13-date": "2018 április",
      "s-td-12-title": "Revolution",
      "s-td-12-date": "2016 június",
      "s-td-11-title": "I'd Love to Change the World",
      "s-td-11-date": "2016 június",
      "s-td-10-title": "Kings",
      "s-td-10-date": "2015 október",
      "s-td-09-title": "Idfc",
      "s-td-09-date": "2016 július",
      "s-td-08-title": "Woke the F*ck Up",
      "s-td-08-date": "2016 július",
      "s-td-07-title": "The Calling",
      "s-td-07-date": "2016 augusztus",
      "s-td-06-title": "Unity",
      "s-td-06-date": "2016 augusztus",
      "s-td-05-title": "Monody",
      "s-td-05-date": "2016 augusztus",
      "s-td-04-title": "Say It",
      "s-td-04-date": "2016 szeptember",
      "s-td-03-title": "Rush Over Me",
      "s-td-03-date": "2016 október",
      "s-td-02-title": "Afterlife",
      "s-td-02-date": "2016 október",
      "s-td-01-title": "It's All On U",
      "s-td-01-date": "2017 május",
      "s-mdwds-title": "Moduláris Tervezés Design Rendszerekkel",
      "s-tcds-title": "A Chameleon Design Rendszer",
      "s-design-mdwds-description": "A design útja a moduláris megközelítésig. A komponensalapú tervezés elmélete és gyakorlata a modern szoftverfejlesztésben.",
      "s-design-tcds-description": "A lorant.design mögött működő design rendszer szabályainak, felépítésének és létrehozási folyamatának bemutatása.",
      "s-design-proceedstudy": "Tovább a tanulmányhoz",
      "s-design-proceedarticle": "Tovább a bejegyzéshez",
      "s-mdwds-cover-h1": "Moduláris Tervezés<br> Design Rendszerekkel",
      "s-mdwds-prologue-title": "Előszó",
      "s-mdwds-prologue-p1": "Az utóbbi időben product designt érintő körökben a design rendszerek talán a legnépszerűbb témának számítanak. Olyannyira, hogy nem csak az óriás technológiai \ncégek érzik szükségét elkészítésének és fenntartásának, de még a szigorúan fizikai, kézzel fogható terméket értékesítő vállalatok is, mint például a Royal Canin, \nvagy az Audi.",
      "s-mdwds-prologue-p2": "Mivel egy ennyire forró témáról van szó, nem csoda, hogy olyan sokan leírták már, hogy hogyan kell létrehozni őket, mint például Brad Frost az Atomic Design \ncímű könyvében, vagy Alla Kholmatova a Design Systems-ben. Ezek a könyvek nagyszerűen végigmennek a működésük- és elkészítésük módján, viszont arról csak \nröviden beszélnek, hogy milyen szakmai hajtóerő állt a szisztematikus tervezés elterjedése mögött, és milyen problémákat kíván megoldani. Elsősorban a \n\"hogyan\"-ra fókusználnak, nem pedig a \"miért\"-re. Szakdolgozatomban én a \"miért\"-re helyeztem a hangsúlyt, és kutatásokkal alátámasztva felépítettem egy \nlistát azokból a tényezőkből, amik a design válság kialakulásához hozzájárultak. Ehhez gyakran éveket, néha évtizedeket kellett visszamenni az időben, és \nolyan - ma már idejétmúltnak számító - forrásokat keresni, amik alátámasztják a meglátásaimat.",
      "s-mdwds-prologue-p3": "Szakdolgozatom második felében arról írok, hogy a design rendszer mellett milyen megoldások születtek még a feltárt problémákra, majd részletesebben \nmegfogalmazom, hogy mit jelent design rendszerben tervezni.",
      "s-mdwds-prologue-p4": "Azért döntöttem úgy, hogy elsősorban nem a design rendszerek felépítésére helyezem a hangsúlyt, mert ebben a megközelítésben már nagyon sokan feldolgozták a \ntémát. Számomra legalább annyira izgalmas azt vizsgálni, hogy egy szakterület milyen tényezők hatására jutott el odáig, ahol éppen tart, mint az aktuális \nszokásait és bevett gyakorlatait. Így a szakma fejlődése nem fog folyamatos meglepetéseket okozni, hiszen ha tudjuk, hogy honnan indult, jobb rálátásunk van \narra is, hogy milyen irányba tart.",
      "s-mdwds-prologue-p5": "Szakdolgozatom írása közben számtalan hasznos visszajelzést kaptam, amik segítettek engem abban, hogy minél több nézőpontból tudjam ezt a témát megvizsgálni és \nkifejteni. Kifejezetten köszönöm Nikázy Gusztávnak, egyetemi tanáromnak, aki a sok hasznos meglátása mellett ösztönzött engem arra, hogy minél objektívebben\nálljak írásnak, valamint nagyon sokat segített a Chameleon front-end technológiai hátterének megválasztásában is. Továbbá testvéremnek, Tóth Bálintnak, aki\na végeláthatatlan hosszúságú JavaScript fájljaimat rekordidő alatt tömörítette bele pár sorba.",
      "s-mdwds-chapter-1-title": "Modularitás: a rendszerek alapja",
      "s-mdwds-chapter-1-p1": "&mdash;Így fogalmazza meg a \"rendszer\" jelentését a Cambridge értelmező szótára. Ez egy elég tág magyarázat, azonban egyértelműen azt sugallja, hogy ahhoz, hogy \negymással együtt tudjanak működni az elemek, speciális módon kell őket megtervezni. Ez a speciális mód pedig a modularitás.",
      "s-mdwds-chapter-1-p2": "A modularitásnak több megközelítése is van, és meghatározása alkalmazási területenként eltérhet. Alapvetően az a lényege, hogy egy adott rendszert úgy terveznek \nmeg, hogy <a target=\"_blank\" class=\"t-article__a\" href=\" https://www.cleverism.com/lexicon/modular-design\">egymáshoz illeszkedő részegységekből felépíthető legyen.</a>\nBizonyos esetekben különböző elemek helyettesíthetik egymást, így a rendszer több, különböző formát is ölthet. A moduláris tervezést előszeretettel alkalmazzák \nkülönböző iparágakban (mint például bútorgyártás, építőipar, autógyártás, terméktervezés), mert ennek hatására leegyszerűsödnek és gyorsulnak a tervezési \nfolyamatok, olcsóbb lesz a gyártás és javítás, valamint könnyebb lesz a csomagolás és szállítás.",
      "s-mdwds-chapter-1-p3": "Erre épül például az IKEA tervezési módszere, aminek lényege, hogy a bútort előregyártott elemekből, szétszerelve csomagolják és árulják, a \nvevőnek kell otthon összeépítenie a hozzá tartozó útmutató szerint. Az IKEA nagyon sok különböző bútort gyárt, viszont ha ezekre nem egészként \ntekintünk, hanem alkotóelemenként, akkor azt figyelhetjük meg, hogy hasonló egységekből állnak: a polcok eltérhetnek hosszúságban, szélességben, \nszínben, de ugyanúgy vannak megmunkálva, hasonlóan vannak előfúrva, és ugyanazokkal az elemekkel kell őket rögzíteni a befoglaló egységhez. \nEz megkönnyíti a tervezést, hiszen sokkal könnyebben létrehozhatók ezek a variációk, mintha minden elem egyedi lenne, valamint a gyártást is, \nmert ugyanazokkal a gépekkel el lehet őket készíteni. A legyártott elemek csomagolása is lényegesen könnyebb így, hogy a lehető legkisebb \negységekre vannak bontva, mivel ilyen módon foglalják a legkevesebb helyet, és lapra szerelve kevésbé sérülékenyek.",
      "s-mdwds-chapter-1-p4": "A példa jól mutatja, hogy hogyan forradalmasította ez a tervezési elv a bútorgyártást, azonban, mint korábban említettem, nem ez az egyetlen \nterület, ahol nagy népszerűségre tett szert. A moduláris tervezésnél érdemes két területet megkülönböztetni: a fizikai- és az elméleti \nfelhasználást.",
      "s-mdwds-chapter-1-subtitle-1": "A modularitás felhasználása fizikai környezetben",
      "s-mdwds-chapter-1-subchapter-1-img1": "A moduláris tervezés lehetővé teszi a sorozatgyártást, így a modelleket nem egymás után, egyedileg készítik el, hanem egyszerre, \npárhuzamosan dolgoznak rajtuk.",
      "s-mdwds-chapter-1-subchapter-1-p1": "Az iparban nem újdonság a moduláris tervezés. Az egyik leglátványosabb eredményt nem is olyan régen az autógyártásban érte el, \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://us5.campaign-archive.com/?u=7e093c5cf4&id=ead8a72012&e=ecb25a3f93\">ahol 20 éve egy új modell piacra \nvezetése a tervezéstől kezdve 5 év volt, viszont a moduláris tervezés bevezetésének köszönhetően ez napjainkra egy évre  csökkent.</a> A \nmodularitásnak sok előnye van, és a különböző iparágak különbözőképpen használják ezt ki. Hídépítésnél például könnyebb az egységeket szállítani, \nmajd ezeket a helyszínen összeszerelni, míg hajógyártásnál nagymértékben javítja a skálázhatóságot, lehetőséget biztosítva sokkal nagyobb méretű \nhajók építésére.",
      "s-mdwds-chapter-1-subtitle-2": "A modularitás felhasználása elméleti környezetben",
      "s-mdwds-chapter-1-subchapter-2-p1": "Nagyon sok szabályrendszer alapul modularitáson. Elég extrém példának tűnhet, de akár a fizetési eszközök is egy moduláris rendszer részét képzik, \nahol különböző címletekből különböző összegeket lehet többféleképpen kirakni. Ha eltekintünk a kényelmi szempontoktól, mint például attól, hogy \nkevesen örülnének annak, ha fizetésüket aprópénzben kapnák, akkor valójában a végeredmény tekintetében mindegy, hogy az milyen címletekből adódik \nössze.",
      "s-mdwds-chapter-1-subchapter-2-p2": "Egy kevésbé elvont alkalmazása a számítástechnikai programkódok felépítése, \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://msdn.microsoft.com/en-us/library/ff921069(v=pandp.20)#why-choose-a-modular-design\">aminél ma már sztenderd lett \na modularitás</a>, ugyanúgy, mint az autógyártásban. Azonban ez nem volt mindig így: az 1960-as évek végén egy válsághelyzet alakult ki, mivel a gépek \nhardver téren rohamos ütemben fejlődtek, <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.fastcodesign.com/90152743/software-design-is-in-crisis\">és ezzel a szoftverek \nnem tudtak lépést tartani.</a> Az 1968-as <a target=\"_blank\" class=\"t-article__a\" href=\"http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF\">NATO \nszoftverfejlesztési konferencián</a> alkalmazták először a \"szoftverválság\" szót, és itt merült fel a megoldás is a problémára, mégpedig az objektumorientált \nprogramozás. Ez egy olyan módszertan, aminek középpontjában a kód újrafelhasználhatósága áll. A megközelítés ennek érdekében a hangsúlyt az eljárások \nfelől az adatszervezés irányába mozdítja.",
      "s-mdwds-chapter-1-subchapter-2-hl1": "\"Döntsd el, mely modulokra van szükséged és oszd fel a programot úgy, hogy az adatokat modulokba helyezed.\"",
      "s-mdwds-chapter-1-subchapter-2-p3": "&mdash;Írja Bjarne Stroustrup könyvében a moduláris programozásról, azonban később látni fogjuk, hogy ez a tanács nem csak a kódírást könnyíti meg.",
      "s-mdwds-chapter-1-subchapter-2-p4": "Az internet elterjedésével egyre nagyobb szerepet kapott a front-end fejlesztés is, ahol szintén megjelent a moduláris kódtervezés. Különböző \nkeretrendszerek (frameworkök) és könyvtárak jöttek létre annak érdekében, hogy segítsék a webfejlesztők munkáját előre megírt, újrafelhasználható \nkódokkal. Ilyen volt például a jQuery, amit a mai napig széles körben használnak, de manapság is jelennek meg JavaScript alapú keretrendszerek, \nmint például a <a target=\"_blank\" class=\"t-article__a\" href=\"https://vuejs.org\">Vue</a> vagy a  <a target=\"_blank\" class=\"t-article__a\" href=\"https://reactjs.org\">React</a>, amik \nmásként használják ki a modularitás tulajdonságait.",
      "s-mdwds-chapter-1-subchapter-2-p5": "Azonban van egy területe a szoftverfejlesztésnek, ahova csak az utóbbi időben kezdte betenni a lábát a moduláris megközelítés, ez pedig a design. \nMarco Suarez, az InVision design systems csapatának vezetője szerint ennek oka hasonló, mint a szoftverválság esetében: a design nem tud lépést \ntartani a front-end fejlesztéssel. <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.designbetter.co/design-systems-handbook/introducing-design-systems\">\nA Design Systems Handbook első fejezetében</a> így nyilatkozik:",
      "s-mdwds-chapter-1-subchapter-2-hl2": "Most, 50 évvel később, hasonló kihívásokkal találjuk szemben magunkat, de ezúttal design téren. A design küszködik azzal, hogy skálázódjon az \napplikációval, amit támogat, mert még mindig egyedi, testreszabott megoldásokat nyújt egyéni problémákra.",
      "s-mdwds-chapter-1-subchapter-2-p6": "A design egyedi problémákra keres megoldást, ami lassítja a tervezési folyamatot. Ennek oka, hogy egyedi problémára egyedi megoldást lehet csak \ntervezni, ami design adósságok felhalmozódásához vezet. Design adósságnak azt nevezzük, amikor egy létező felületbe egy új elem kerül be, amit \nkizárólag abba a környezetbe terveznek bele, figyelmen kívül hagyva az újrafelhasználhatóságot. Erről a következő fejezet végén írok \nrészletesebben.",
      "s-mdwds-chapter-2-title": "A design válsághoz vezető út",
      "s-mdwds-chapter-2-p1": "A nagyobb cégek közül sokan tapasztalták, hogy a design részleg gyarapítása nem oldja meg azt a problémát, amire sokáig erőforráshiányként \ntekintettek: a designerek toborzása által nem lettek gyorsabbak a design folyamatok, azonban nőtt a felületek közti inkonzisztencia. Mindennek \naz az oka, hogy a designerek egy idő után különböző megoldásokat gyártottak az egy forrásra visszavezethető problémákra, ezzel fölösleges \nmunkát végezve, valamint növelve a komplexitást. Az Airbnb <a target=\"_blank\" class=\"t-article__a\" href=\"https://airbnb.design/building-a-visual-language/\">\ndesign blogján említi,</a> hogy felfedezték ezt a szervezeti problémát maguknál, és úgy gondolják, hogy ez nem csak őket érinti, hanem az \negész szoftverfejlesztési ipart:",
      "s-mdwds-chapter-2-hl1": "\"Nyilvánvalóvá vált számunkra, hogy szisztematikusabb megoldásokra van szükségünk, amik vezetik és befolyásolják a kollektív \nerőfeszítéseinket. Míg észleltük ezeket a kihívásokat a vállalaton belül, úgy gondolom, hogy ezek egy nagyobb szoftveripari problémának \na tünetei.\"",
      "s-mdwds-chapter-2-p2": "Valójában nagyon hasonló ez a megállapítás, mint amire Marco Suarez és az InVision is jutott. Másként fogalmazzák meg a problémát, de a \nszisztematikus megközelítés többek között a design adósságok kiszorításában segít.",
      "s-mdwds-chapter-2-p3": "Hogy megértsük, hogy a design folyamatok milyen irányba fejlődnek, fontos, hogy tisztában legyünk azokkal a problémákkal, amikre megoldást \nkeres. Nézzük, hogy mi változott az elmúlt évtizedekben a webes tervezés-, tartalomkezelés-, és tartalomfogyasztás terén, és ez milyen \nhatással volt a designra!",
      "s-mdwds-chapter-2-subtitle-1": "A tartalomközpontúság elterjedése",
      "s-mdwds-chapter-2-subchapter-1-img1": "A Youtube \"Zenék\" oldala, ahol az éppen népszerű klipek jelennek meg. Az oldal készítői csak keretet adnak a tartalom \nközvetítéséhez, ami a felhasználóktól származik.",
      "s-mdwds-chapter-2-subchapter-1-p1": "A HTML közel 30 éve jelent meg azzal a céllal, hogy alternatívaként szolgáljon írott tartalmak online közzétételére, ami mindaddig nyomtatott \nmódon történt. Ez a leírónyelv azóta webes szabvánnyá vált a <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.w3.org/\">W3C</a> támogatásával (a W3C \negy nemzetközi közösség, ami fejlesztéseivel az internet hosszútávú fejlődésén dolgozik).",
      "s-mdwds-chapter-2-subchapter-1-p2": "A digitális, hálózaton keresztül elérhető forma nagyon sok előnyt is biztosít a tárolás mellett: egyrészt egyszerűbben és rugalmasabban \nfrissíthető a tartalom, másrészt pedig könnyebb elérni is, így sokkal nagyobb közönséghez juthat el.",
      "s-mdwds-chapter-2-subchapter-1-p3": "A weboldalak kezdeti célja tehát nem a dinamikus tartalomkezelés és megjelenítés volt, mint amihez napjainkban már hozzászoktunk, hanem \negyszerűen az, hogy statikus oldalakon információkat tároljanak, és ezeket az oldalakat linkek segítségével, hierarchikus felépítés nélkül \nösszekapcsolják, elérhetővé tegyék, így egyfajta virtuális könyvtárat létrehozva.",
      "s-mdwds-chapter-2-subchapter-1-p4": "1996-ot írtunk, mikor Bill Gates közzétett egy cikket a Microsoft oldalán \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://medium.com/@HeathEvans/content-is-king-essay-by-bill-gates-1996-df74552f80d9\">\"Content is King\"</a> \ncímmel. Ez az írás akkoriban jóval megelőzte a korát, hiszen az internet még gyerekcipőben járt, és messze nem számított elsődleges \ninformációforrásnak. Azonban Bill Gates már látta, hogy jó esély van arra, hogy hamarosan azzá váljon.",
      "s-mdwds-chapter-2-subchapter-1-hl1": "\"Ha azzal számolunk, hogy az emberek bekapcsolják a számítógépet a képernyő olvasásához, mélyreható és rendkívül naprakész \ninformációkat kell kapniuk, amelyeket tetszés szerint felfedezhetnek. Hanggal, esetleg videóval is kell rendelkezniük.\"",
      "s-mdwds-chapter-2-subchapter-1-p5": "Ahhoz, hogy egy felhasználó aktívan és rendszeresen használjon egy oldalt, fontos, hogy folyamatosan új és naprakész tartalommal találkozzon. \nOlyannal, amit az offline világ hírforrásai nem tudnak nyújtani.",
      "s-mdwds-chapter-2-subchapter-1-p6": "A programozási nyelvek fejlődése nem csak az asztali alkalmazás fejlesztést és a játékipart lendítették meg, hanem a webfejlesztést is. \nLehetőség nyílt arra, hogy a weboldalak dinamikusan, valós időben frissülő tartalmat jelenítsenek meg a felhasználóknak. Az első webes \nalkalmazás, ami lényegesen túlszárnyalta azt, amit mindaddig a weboldalakról gondoltunk, a Gmail volt. Ez a Google online email kliense, \namit 2004-ben tettek elérhetővé, és a mai napig a legnépszerűbb email kezelő. Amellett, hogy messze ez biztosította a legnagyobb ingyenes \ntárhelyet, innovációja abban rejlett, hogy kihasználta az AJAX webfejlesztési technika előnyét, hogy újratöltés nélkül frissítse az oldal \nbizonyos részeit. Az AJAX ezáltal nagymértékben tudta javítani a felhasználói élményt, a Gmail pedig volt annyira népszerű már a \nmegjelenésekor is, hogy <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.developer.com/design/article.php/3526681\">inspirációt adott a fejlesztőknek,</a> \nhogy a webfejlesztés akkori technológiai hátterével milyen komplexitású felületeket lehet fejleszteni.",
      "s-mdwds-chapter-2-subchapter-1-p7": "Egyre népszerűbbé váltak a tartalom aggregátor oldalak, amik lényegében csak felületet biztosítottak a felhasználóknak tartalommegosztás \ncéljából, majd egy jól megírt algoritmussal a feltöltött tartalmat megjelenítették azoknak a keresőknek, akiknek feltehetően relevánsnak \nbizonyult. Ilyen oldal például a Youtube, a Facebook, a Pinterest, az Amazon vagy a Deviantart, de a legnépszerűbb és az egyik legkorábbi, \na Google kereső is. A tartalmat nem az oldal készítői generálják, hanem a felhasználók, és ez olyan mértékű, és annyira változatos, hogy \nbárki megtalálja azt, ami őt érdekli.",
      "s-mdwds-chapter-2-subchapter-1-p8": "Ahogy az alkalmazásokat egyre többen fejlesztik, több funkcióval egészülnek ki, úgy egyre bonyolultabbá és szerteágazóbbá válnak. A túl \nsok funkció vissza tud ütni, ha a felhasználót összezavarja, mivel így pont az ellenkezőjét éri el, mint ami miatt tervezik: az \nelköteleződést nem növelni, hanem csökkenteni fogja.",
      "s-mdwds-chapter-2-subchapter-1-p9": "Marcin Treder Web Design Book of Trends (<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/ebooks/web-design-book-of-trends-2013-2014/\">@UXPin</a>)\ncímű könyvét a tartalom fontosságának részletezésével kezdi. \"A felhasználók nem a szép design miatt jönnek az oldalra, hanem hogy elérjék céljaikat\" \n- írja, és folytatja azzal, hogy a célhoz a tartalmon keresztül vezet az út. Ez a tartalom pedig folyamatosan változik, frissül, cserélődik - tehát \ndinamikus.",
      "s-mdwds-chapter-2-subchapter-1-p10": "Az az elv, ami design területen egykor működött, hogy a grafikus megtervezi az adott tartalomhoz az oldalt, már nem működik. Gondoljunk \ncsak a Facebook hírfolyamára: itt találkozhatunk írásos posztokkal, élő videókkal, cikkekkel, különböző oldalakról beágyazott megosztásokkal, \nde még ismerőseink interakcióival is, mint például a kedvelés, megosztás vagy hozzászólás. Hogyan is tudnánk megtervezni a különböző oldalakat, \nha mindenkinek másképpen jelennek meg? Még a felhasználói felület sem fog egyezni, ugyanis az is alkalmazkodik az egyén beállításaihoz, \njogosultságaihoz és preferenciáihoz. Megtehetjük, hogy készítünk különböző variációkat, de nem fogjuk tudni lefedni az összes lehetőséget, \nellenben hihetetlen mennyiségű képernyőtervünk lesz, ami nem fogja hitelesen reprezentálni az oldal megjelenését és működését.",
      "s-mdwds-chapter-2-subtitle-2": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-2-img1": "Nem könnyű eldönteni, hogy mekkora vásznat hozzunk létre a weboldal látványterveinek megtervezéséhez.",
      "s-mdwds-chapter-2-subchapter-2-p1": "A technológiák fejlődése által egyre nagyobb teljesítményt sikerült egyre kisebb készülékekbe sűríteni, ráadásul az érintőkijelző megjelenésével \nés elterjedésével a készülékek felületének jelentős része aktív, használható területté vált. Mire azon kaptuk magunkat, hogy felbontásban, \nméretben, képarányban és képmegjelenítési techológiában különböző kijelzők végtelen kombinációjával kerültünk szembe, fel kellett ismernünk, \nhogy a tervezési megközelítéseink messze le vannak maradva attól, hogy ezekre látványterveket tudjunk készíteni. A felhasználó hasonló \nfunkcionalitással és működéssel szeretne találkozni a 27 colos monitorján, a 13’-os ultrabookján és a 4.7’-os telefonján, hogy a feladatait \nkészüléktől függetlenül el tudja végezni.",
      "s-mdwds-chapter-2-subchapter-2-p2": "Most nézzük a problémát tervezési oldalról: a designerben már az első lépésnél, a dokumentum létrehozásánál felmerül a kézenfekvő kérdés: \nmekkora méretű legyen? A CSS jó megoldásokat biztosít kijelzőhöz alkalmazkodó layout tervezésére: ilyen például \n<a target=\"_blank\" class=\"t-article__a\" href=\"http://www.liquidapsive.com/\">az adaptív, a fluid vagy a reszponzív tervezési megközelítés</a>, ami arányokkal \nés képernyőszélességhez kapcsolódó tulajdonságokkal operál, azonban a népszerű tervezőszofverekben egyelőre nincs meg az a dinamika, \nhogy lehetőséget adjanak hasonló tervezésre.",
      "s-mdwds-chapter-2-subtitle-3": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-3-p1": "Az internet megjelenése után a webes front-end fejlesztés (már ha nem erős ez a kifejezés) nagyon egyszerű eszközökkel dolgozott, ezért nem \nvolt kérdéses, hogy hol voltak a határai. Olyan alapvető formázásokat tudott, mint például színek, hátterek, betűméretek és stílusok állítása \n(nem meglepő, hiszen célja hasonló volt, mint például a Wordnek, azzal a különbséggel, hogy a dokumentum célzottan webes feltöltésre készült). \nEkkor még jóideig helytállt a mondás, hogy amit le lehet kódolni HTML-ben és CSS-ben, arra lehetett készíteni tervet Phtosohopban. Azonban, \nahogy egyre bővült a specifikációjuk, majd kiegészítette a képet a JavaScript, ez lassan kezdett megváltozni.\nA JavaScript 1995-ben jelent meg, habár nagyobb népszerűségre csak hosszú küzdelmek után, a 2000-es évek elején tett szert. Ennek okáról hosszas \nérveléseket lehet találni, viszont egy dolog biztosan közrejátszott: 2004 és 2005 között a Google két nagyobb alkalmazásához is használta, a \nMaps-hez és a Gmail-hez.",
      "s-mdwds-chapter-2-subchapter-3-p2": "A front-end technológiák egyre összetettebb, dinamikusan változó látvány megjelenítését tették lehetővé, azonban a design szoftverek azóta is \nstatikusan működnek. Ma már a designnak nem különálló képernyőállapotok látványtervezéséről kellene szólniuk, hanem felhasználói interakción \nalapuló, folyamatos visszacsatolások dinamikus megjelenítéséről. Ez egyrészt szükséges a fejlesztést megelőző felhasználói teszteléshez, \nvalamint magához a fejlesztéshez is, hiszen sokkal nehezebb elmagyarázni például a layout működését, mint megmutatni élő példán. Hasonló a \nhelyzet az áttűnésekkel és az animációkkal is.",
      "s-mdwds-chapter-2-subtitle-4": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-4-img1": "Az Apple 1998-as weboldala. Lehet, hogy mai szemmel design téren lehetne kifinomultabb, de egyértelmű, hogy mik az interaktív elemek rajta.",
      "s-mdwds-chapter-2-subchapter-4-img2": "A web 2.0 design a színes, egyedi grafikai megoldásokról szólt. A UI elemeket sokszor kellett emiatt képként beilleszteni.",
      "s-mdwds-chapter-2-subchapter-4-img3": "A kép jól illusztrálja a különbséget a skeuomorph, a flat és a material között.",
      "s-mdwds-chapter-2-subchapter-4-p1": "Az internet kezdeti éveiben (1995–2000) kevés lehetőség volt az egyediség kibontakoztatására az alacsony sávszélesség és a kezdetleges és \nerősen korlátozott fejlesztési technológiák miatt. Bár ma már megmosolyogjuk a Yahhoo vagy az Apple első weboldalát, kétségtelen, hogy nagyon \nsok fontos konvenció létrejötte ehhez a korszakhoz köthető, mint például a kék színű linkek, vagy a gombok eltérő állapotai.",
      "s-mdwds-chapter-2-subchapter-4-p2": "Ezután, a 2000-es évek eleje körül terjedt el a web 2.0, ami a felhasználói interakción alapuló weboldalakat takarta, és ezzel párhuzamosan \nterjedt el egy új design stílus, amit szintén web 2.0 néven emlegetnek. Ekkor vált igazán népszerű tervezőszoftverré a Photoshop – elég megnézni \nazokat a szép, fényes gombokat, vagy az erős drop shadow- illetve egyéb blending options tulajdonságokkal erősen terhelt grafikai elemeket a \nweboldalakon ebből az időből. Egyre népszerűbbek lettek a nagy képek, és ami igazán fontos, a \"call to action\"-ök – nagy, színes, \nfigyelemfelkeltő gombok, amiket a konverzió javítása érdekében kezdtek el használni (és használnak a mai napig).",
      "s-mdwds-chapter-2-subchapter-4-p3": "Majd szép lassan teret nyert a skeuomorphic design, ami valós tárgyak és felületek stilizált megjelenését állította középpontba. Legnépszerűbb \nképviselője az Apple volt, ami az iOS7-nél szakadt el ettől a stílustól 2013-ban.",
      "s-mdwds-chapter-2-subchapter-4-p4": "Az igazán nagy revolúciót a flat design hozta meg, amit a Windows már 2010-től használt, az Apple az iOS7 megjelenésétől, és rövidesen a \nGoogle is beállt a sorba. Ez a stílus a minimalizmust képviselte, és a letisztult, egyszerű, geometrikus megjelenésről szólt. Akkora hatással \nvolt a design fejlődésére, hogy szakmai sztenderd lett hirtelen, és vállalatok sorra cserélték le az oldalaikat.",
      "s-mdwds-chapter-2-subchapter-4-p5": "A flat megjelenése óta nem történt igazán nagy stílusbeli változás. A mai napig ez az általános trend, azonban sokat fejlődött az elmúlt \névekben. A Google 2014-ben publikálta a <a target=\"_blank\" class=\"t-article__a\" href=\"https://material.io/\">Material Designt</a>, ami nagyon sok tekintetben \nhasonlít a flathez, azonban sokkal egyértelműbben van definiálva, hiszen a Google gondoskodott a részletekbe menő rendszer megtervezéséről. \nA material egy univerzális nyelv <a target=\"_blank\" class=\"t-article__a\" href=\"https://youtu.be/rrT6v5sOwJg?t=6m28s\">(legalábbis Matias Duarte, a Google \nVP designere szerint)</a>, ami folyamatosan fejlődik a korral, ezzel kiküszöbölve az olyan durva, ugrásszerű stílusbeli \nátalakulásokat, mint amik korábban voltak.",
      "s-mdwds-chapter-2-subchapter-4-p6": "Láthatjuk, hogy mennyire változatos és egymástól eltérő stílusok váltották egymást a webdesign eddigi rövid történelme alatt, mire elérkeztünk \negy olyan állapothoz, ahol azt mondhatjuk, hogy a lényeges tulajdonságokban nem történik egyik napról a másikra radikális változás, inkább \ncsak folyamatos, irányított fejlődés. Ennek az az oka, hogy elsősorban a digitális termékeket fejlesztő cégek, akiknek fontos, hogy naprakész \nwebes megjelenésük legyen, rájöttek, hogy túl nagy erőforrást igényel egyben lecserélni a teljes megjelenésüket, ráadásul erre az erőforrásra \ncsak adott időközönként, a designváltás alatt van szükség. Valamint van egy másik probléma, ami talán ennél is fontosabb, mégpedig az, hogy \nfelhasználói szempontból nagyon frusztráló egy megszokott szolgáltatást teljesen új köntösben látni, és újrakezdeni a tanulási folyamatot a \nteljes felületen.",
      "s-mdwds-chapter-2-subchapter-4-p7": "Ezért is volt igazán fontos annak a mentalitásnak a kialakítása, hogy a designt egy folyamatosan fejlődő és változó rendszerként kell kezelni, \namiben a változások nem lehetnek önkényesek és szubjektívek. Ez nagyon fontos, hiszen így érvényesül igazán a felhasználóközpontúság, mivel \nvisszajelzésekre támaszkodva alakítjuk a felületeket.",
      "s-mdwds-chapter-2-subtitle-5": "A webdesign szakma útkeresése",
      "s-mdwds-chapter-2-subchapter-5-p1": "A webdesign gyökerei a képzőművészetben keresendők, azonban egy olyan területről van szó, ami alig 20 éve fejlődött ki (legfeljebb a 2000-es \névektől van értelme szakmaként tekinteni a webdesignra), és igazán nagy hangsúlyt csak az utóbbi években szerzett. Ahogyan próbál \nalkalmazkodni egyszerre a felhasználók igényeihez és a fejlődő technológiai háttérhez, nem meglepő, hogy az állása ennyire bizonytalan. \nRáadásul a rendeltetése merőben eltér attól, amit a képzőművészetben megszoktunk - a képeket, festményeket, szobrokat vizuálisan értelmezzük, \nelső ránézésre kialakul bennünk egy érzés a látott mű kapcsán, azonban a weboldalak egyszerre építenek vizuális és szöveges tartalomra, amit \naz is nehezít, hogy mindez egy interaktív kezelőfelületen keresztül érhető el. A felhasználónak rá kell jönnie tehát, hogy bizonyos funkciókat \nhol tud elérni az oldalon, amik alapállapotban lehet, hogy nem is látszódnak (mint például egy dropdown menü elemei, amik csak kattintás után \njelennek meg).",
      "s-mdwds-chapter-2-subchapter-5-p2": "Rune Madsen, a Programming Design Systems szerzője szerint a probléma az, hogy \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://programmingdesignsystems.com/introduction/\">sok helyen a mai napig rossz szemlélet uralkodik a design \noktatásban</a>, hiszen a legtöbb művészeti képzésben nem tanítanak rendszerszintű tervezést, csupán kreatív ötletek létrehozását. A designer \nszigorúan csak statikus állapotokat tervez, amit a vízesésmodellel lehet integrálni a szoftverfejlesztésbe, mivel erős határ képződik látvány \n(design) és működés (programkód) között.",
      "s-mdwds-chapter-2-subchapter-5-p3": "A vízesés-modell egy lineáris, szekvenciális tervezési megközelítés, ami a szoftverfejlesztésben rugalmatlan, az agilishoz képest sokkal \nkevésbé flexibilis folyamat. Míg az ipar számos területén működik, addig az informatikában kevésbé, mivel a digitális világban rendkívül \ngyors az iteráció, és az egyes területek el tudnak kezdeni dolgozni párhuzamosan, sőt, a kérdések tisztázása érdekében nagyon is érdemes \nnekik.",
      "s-mdwds-chapter-2-subchapter-5-p4": "Napjainkra a webdesign két irányba ágazott el: az egyik a felhasználói felület vizuális megjelenésével foglalkozik, másik pedig a felhasználói \nélmény megtervezésével. Kisebb termékeknél összemosódhat ez a kettő (ők a product designerek), azonban nagyobb felületeknél külön kellett \nválasztani őket, mert teljesen más munkafolyamatokról van szó.",
      "s-mdwds-chapter-2-subchapter-5-p5": "A UI designerek, akik a felületeket tervezik, valójában a modern tervezési folyamatban nem is felületeket terveznek, hanem komponenseket, \nmint a design rendszert fenntartó csapat tagjai. Feladatkörük sokkal több annál, hogy \"szép dolgokat rajzolnak\", mint ahogy sokan írnák le \na munkájukat. Reszponzív, skálázható és újrafelhasználható komponenskönyvtárat készítenek.",
      "s-mdwds-chapter-2-subchapter-5-p6": "A UX designerek pedig amellett, hogy elemzések és kutatások eredményei alapján felhasználói utakat terveznek, a végleges prototípust is \nösszeállítják, a végleges UI elemekkel. Tehát a UX designer végső célja nem az, hogy drótvázat készítsen, még ha a tervezési folyamatának \nrésze is, hanem az, hogy kész terveket (prototípusokat) adjon tovább fejlesztésre.",
      "s-mdwds-chapter-2-subchapter-5-p7": "Ez a két út csak a két legalapvetőbb irány, ez nagyobb vállalatoknál kiegészül interakciótervezéssel (IxD) és információs architektúratervezéssel \n(IA). Kisebbeknél beépülnek a UX illetve UI szerepkörbe. Sok évnek kellett eltelnie, mire kialakultak ezek a - külső szemmel talán értelmetlen \n&mdash; design specializációk abból, hogy egykor volt a webdesigner, aki a grafikákat készítette.\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://uxplanet.org/ux-vs-ui-vs-ia-vs-ixd-4-confusing-digital-design-terms-defined-1ae2f82418c7\">Ezekről itt \nolvashatsz bővvebben.</a>",
      "s-mdwds-chapter-2-subtitle-6": "Egyre több designernek kell közösen dolgoznia",
      "s-mdwds-chapter-2-subchapter-6-p1": "Korábban egy példában már érintőlegesen említettem az Airbnb tapasztalatát azzal kapcsolatban, hogy a design részleg bővítése nem érte el a \nkívánt eredményt a folyamatok hatásosabbá tétele érdekében, most pedig elérkeztünk oda, hogy megvizsgáljuk ennek lehetséges okait.",
      "s-mdwds-chapter-2-subchapter-6-p2": "Először is, mindegy, hogy hány embernek kell közösen terveznie, nem hanyagolható el az emberi tényező: mindenki máshogy gondolkodik, máshogy \nközelíti meg a szembejövő problémákat, így egységes nyelvrendszer hiányában eltérő választ fognak adni rá.",
      "s-mdwds-chapter-2-subchapter-6-p3": "Manapság egyre jobban előtérbe kerül a kollaboráció elősegítése a tervezőprogramokban, azonban ez csak az utóbbi évek trendje. Túl későn \népültek be a felhőszolgáltatások ezekbe az alkalmazásokba, és még mindig érződik, hogy nem annyira stabil és kifinomult a funkcionalitásuk. \nCélszoftverek helyett még mindig gyakran arra szorulunk, hogy általános felhőszolgáltatásokat alkalmazzunk, mint például a Google Drive. Ez \nalapvetően nem akkora probléma, azonban sok előnye lehetne, ha a megosztás a tervezőszoftveren belül történne (például megbízhatóság, gyorsaság, \nverziókövetés tekitetében). Arról nem is beszélve, hogy gyorsan el tud fajulni egy Drive fájlstruktúra, ahogy egyre többen használják különböző \ncélokra egy cégen belül, így egyre több nehézséget okoz a közös munka, és nő a hibázás esélye is.",
      "s-mdwds-chapter-2-subtitle-7": "Felhalmozódik a design adósság",
      "s-mdwds-chapter-2-subchapter-7-img1": "A design adósságot a piros nyolcszög ábrázolja, ami semmilyen módon nem kapcsolódik a felület többi egységéhez, így megbontja a rendet és a \nvizuális hierarchiát.",
      "s-mdwds-chapter-2-subchapter-7-p1": "Design adósság <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.invisionapp.com/blog/tackle-design-debt/\">akkor jön létre, amikor egy új, egyedi \nelem kerül az oldalra, amivel eredetileg nem számoltak tervezésnél.</a> Mivel egy adott \nproblémának a megoldására tervezték, nem lehet más felületeken újra felhasználni, így általában nem készül belőle sem design (mint például \nSketch szimbólum), sem pedig front-end komponens. Amellett, hogy megbontja a design rendjét, a front-end kód komplexitását is növeli, hiszen \nezzel gyarapodik az egyedi osztályok és a hozzájuk tartozó paraméterek mennyisége. A design adósság leginkább nagyobb felületeknél jelent \nproblémát, ahol bővíti a design elemek listáját, így nehezítve és inkonzisztensé téve a design folyamatokat, valamint ahol masszív CSS \nkódokkal operál az oldal, hiszen növeli a kódok hosszúságát, ezzel nehezítve az átláthatóságot és növeli a fájlok méretét, ezzel lassítva \na betöltési sebességet.",
      "s-mdwds-chapter-2-subchapter-7-p2": "Egy másik gyakori kiváltó oka pedig az, amikor a felületi hierarchia kialakításának hajtóereje nem felhasználói élményen alapul, hanem üzleti \nérdekeken. \"Legyen figyelemfelkeltőbb\" &mdash; ezután a mondat után általában elkerülhetetlen az adósságmentes tervezés, és sajnos többször hallani,\nmint kellene.",
      "s-mdwds-chapter-2-subchapter-7-p3": "A harmadik, legsúlyosabb probléma pedig a forrásfájlok hiánya. Ahogy jelennek meg és cserélődnek sorra az újabb és újabb tervezőszoftverek, \nvándorolnak a designer kollégák, a fejlesztésnek pedig folyamatos ütemben kell haladnia, nem meglepő, hogy időnként elvesznek a forrásfájlok \n(elvégre ki akarna valaki másnak a strukturálatlan, mappaszerkezet és rétegnév nélküli forrásfájljaiból dolgozni?). Ilyenkor a legegyszerűbb \nmegoldás képernyőképeket készíteni, és erre dolgozni, hiszen sokkal több idő újra megrajzolni egy felületet, mint belemaszatolni az aktuális \nállapotba. Ilyenkor az a baj, hogy egy amúgy is régi terv kerül módosításra, amit még tovább kell zsúfolni, és nincs lehetőség arra, hogy \nkisebb módosításokkal rendbetegyük a felületet, mint például a negatív terek újraállításával, vagy a betűk növelésével. Így sokkal nehezebb \nkomponensekben is gondolkodni, mivel nem tudjuk, hogy melyik elem hol jelenik meg a felületen, és hogyan alkalmazkodik a környezetéhez, tehát \na megoldásunk nem lesz sem reszponzív, sem pedig skálázható (ezekről bővebben a 3. fejezetben). A felhasználói út szimulálása és a tesztelés \nis nehéz így, hiszen mindig csak a módosításokról lesznek tervek, amik a teljes felhasználói utat nem fedik le.",
      "s-mdwds-chapter-2-subtitle-8": "A design szoftverek lemaradtak a fejlődésben",
      "s-mdwds-chapter-2-subchapter-8-p1": "Az általános design megközelítés sokáig egy helyben toporgott: ugyanazzal a technológiai háttérrel próbálta megoldani a szoftverfejlesztés \náltal felvetett problémákat, mint amikor széleskörben elterjedtek a pixelgrafikus tervezőszoftverek, mint például a Photoshop.",
      "s-mdwds-chapter-2-subchapter-8-p2": "Évtizedek teltek el, és még a mai napig ez az egyik legnépszerűbb tervezőszoftver webes környezetben is, annak ellenére, hogy elsősorban \ntervezőgrafikára hozták létre, és nagyon nehezen illeszthető modern szoftverfejlesztési környezetbe. Habár széles palettájának köszönhetően \na digitális grafika nagyon sok területén alkalmazható, és weboldalak látványterveit is viszonylag könnyen meg lehet benne tervezni, azonban \na moduláris tervezésre irányuló törekvéseknek gátat szab, hogy az elemeket csak egyedi objektumokként engedi kezelni, így nem ad lehetőséget \nuniverzális megoldások tervezésére mesterobjektumok létrehozásán keresztül. Ezért, ha frissíteni szeretnénk egy komponenst, azt az összes \nlétező helyen meg kell tennünk.",
      "s-mdwds-chapter-2-subchapter-8-p3": "A moduláris tervezés középpontjában az előre meghatározott megoldások állnak, azonban csak a közelmúltban \nkezdtek el olyan szoftvereket készíteni, amiknek erőssége nem a széleskörű grafikai palettában rejlik, hanem a rendszerszintű megoldások \nminél könnyebb definiálásában. Ilyen például a Sketch, a Gravit és az InVision Studio.",
      "s-mdwds-chapter-3-title": "Megoldáskeresés a design válságban",
      "s-mdwds-chapter-3-p1": "A nagyobb vállalatok rövidesen rájöttek, hogy a design fenntarthatósága a cél mind a felhasználó, mind pedig a cég szempontjából. A felhasználó \nnem akar folyamatosan új felületekkel megismerkedni, a cégnek pedig olcsóbb, gyorsabb és hatékonyabb a tervezés és fejlesztés, ha a problémák \nmegoldását kis lépésekben szállítja a felhasználónak. Nézzük, hogy milyen megoldások segítik elő a design fenntarthatóságát napjainkban!",
      "s-mdwds-chapter-3-subtitle-1": "Atom alapú design rendszer",
      "s-mdwds-chapter-3-subchapter-1-img1": "A design rendszerek komponens alapú megközelítésében előre definiált elemekből tudunk építkezni, amiknek egyedi paramétereit felülírhatjuk \n(mint például a szövegmezőben lévő kitöltő szöveget).",
      "s-mdwds-chapter-3-subchapter-1-img2": "Brad Frost így illusztrálja az atom alapú megközelítés folyamatát.",
      "s-mdwds-chapter-3-subchapter-1-img3": "A Chameleon design rendszerben így néz ki a cikkekhez tartozó Sketch template. Csak fel kell tölteni képekkel és tartalommal az előre definiált \nkomponenseket.",
      "s-mdwds-chapter-3-subchapter-1-p1": "A design rendszerek megjelenéséig a tervezés általános menete az volt, hogy a designerek megtervezték az egyik legdominánsabb oldalt &mdash;a \nfőoldalt, vagy profiloldalt, majd ennek mintájára képezték le az összes többit. Logikusnak tűnik a megközelítés, mivel feltételezhető, hogy \nazok a stílusok, amik harmóniában vannak mondjuk a főoldalon, azok az egyéb aloldalakon is jól mutatnak. Azonban ebben a megközelítésben nem \nalakul ki egy egységes nyelvrendszer a teljes oldalra nézve, amiben olyan elemek is szerepet kapnak, amik a főoldalon mondjuk nincsenek jelen. \nGondoljunk egy egyszerű komponensre, a lapozóra: a főoldalon ritkán találkozunk több oldalra osztott listával, azonban egy nagyobb felületnél \negészen biztos, hogy egy ponton szükség lesz rá. Feltehetően nem is csak egy helyen. És benne van a pakliban, hogy nem ugyanaz a designer \nfogja tervezni az összes felületet, ahol kelleni fog - így előre megtervezett komponens hiányában két különböző stílusú lapozó is létrejön. \nEz pedig az egységes megjelenés ellen játszik, és design adósságot von maga után.",
      "s-mdwds-chapter-3-subchapter-1-p2": "Egy másik jelentős probléma azzal, hogy oldalakban gondolkodunk, hogy a reszponzivitás háttérbe szorul. Először elkészül az asztali változat, \nmajd utána a tablet, végül pedig a mobil - a lefejlesztett felület több helyen is törni fog, hiszen csak a fontosabb kijelzőméretekre \nkészítettünk oldaltervet, és azzal nem foglalkoztunk, hogy közöttük hogyan viselkedik majd az oldal.",
      "s-mdwds-chapter-3-subchapter-1-p3": "A design rendszerek ezzel szemben komponensalapú megközelítést használnak, amit Brad Frost atomic designnak nevezett el. Habár előtte is \nterveztek hasonlóan, ő volt az első, aki összefoglalta ennek a rendszernek a megfelelő előkészületeit, kialakítását, alkalmazását és \nfenntartását. Az atom alapú tervezés lényege, hogy hasonlóan, mint ahogy a bútorok vagy az autók, egy weboldal arculata is felbontható \nismétlődő, újra felhasználható elemekre. Így gyakorlatilag még azelőtt meg tudjuk tervezni a design alapját, hogy tudnánk a pontos \noldalstruktúrát és hierarchiát. Még tervezés előtt összegyűjthetjük, hogy mik azok az elemek, ami nélkül nem lehet weboldalt tervezni, \nés ezt szükség szerint folyamatosan frissíthetjük újabb és újabb elemekkel.",
      "s-mdwds-chapter-3-subchapter-1-p4": "Brad Frost részletesen taglalja az atom alapú tervezés menetét, ami a komponensek létrehozásával kezdődik. Természetesen célja a minél \nmagasabb szintű modularitás, tehát a tervezés a legkisebb egységektől indul, amiket atomoknak nevez. Ezeket kombinálva (mondjuk egy \nbeviteli mezőt gombbal párosítva) molekulákat hozhatunk létre, molekulákból és atomokból pedig organizmusokat, mint mondjuk fejléc vagy \nlábléc (a fejléc például áll logóból, keresőből, linkekből, stb. - ezek az atomok és molekulák). Mindezek kombinálásával pedig templateket \nkapunk, vagyis tartalom nélküli, különböző variációjú oldalstruktúrákat felhasználói kezelőfelülettel. Ez is az egységesítés miatt fontos, \nugyanis ha előre definiálunk lehetséges oldalstruktúrákat, akkor egy új aloldal tervezésénél ezeket elővehetjük, és ezáltal minimálisra \ntudjuk szorítani az eltérő elrendezésű oldalvariációk számát, így időt, energiát és komplexitást takarítva meg mind design, mind pedig \nfejlesztési oldalról.",
      "s-mdwds-chapter-3-subchapter-1-p5": "Egy jól kialakított rendszer jelentősen meggyorsítja a munkát, hiszen egy felületnek nagyon sok ismétlődő eleme van, amire megéri komponenst \nkészíteni. Így szinte teljesen különválasztható a UI tervezése a felületi tervezéstől, ami azért jó, mert így nagyobb hangsúlyt kaphat a \nuser flow és a layouttervezés.",
      "s-mdwds-chapter-3-subchapter-1-p6": "Egy design rendszer segít a fehér papír effektus elkerülésében is: számos elemet el tudunk helyezni a tervezés kezdetén az üres vásznon \nkülönösebb gondolkodás nélkül, mint például a fejlécet és a láblécet. Máris megvan az oldal kerete, ráadásul ezek jó esetben már reszponzívan \nműködnek, szóval jó támpontot adnak a további tervezéshez.",
      "s-mdwds-chapter-3-subchapter-1-p7": "Azonban itt fontos megjegyezni, hogy a design rendszer nem merül ki egy atom alapú komponensgyűjteményben. Brad Frost \n<a target=\"_blank\" class=\"t-article__a\" href=\"http://atomicdesign.bradfrost.com/table-of-contents/\">Atomic Designja</a> nem csupán egy bottom-up tervezési \nmodell, hanem egy modern terméktervezési megközelítés, ami a design folyamatok mellett számításba veszi az implementációt és a \nszoftverfejlesztési- és menedzsment folyamatokban való közös együttműködést.",
      "s-mdwds-chapter-3-subtitle-2": "A skálázható tervezés előtérbe helyezése",
      "s-mdwds-chapter-3-subchapter-2-img1": "Skálázható megoldás egy admin felületen. Habár elég nagy fejlesztői erőforrást igényelhet egy ilyen működés elkészítése, de cserébe hosszútávú, \nigényes megoldást nyújt.",
      "s-mdwds-chapter-3-subchapter-2-p1": "Gyakori probléma új felület tervezésénél, hogy a brief tartalmaz egy leírást arról, hogy minek kell helyet kapnia az oldalon, azonban arról \nnem esik szó, hogy ez a jövőben hogyan módosulhat. Hosszútávon például problémát okozhat, ha egy menü tervezésénél nem vesszük figyelembe, \nhogy idővel további elemekkel bővülhet. Ilyenkor merülhet fel megoldásként a betűméret vagy a negatív terek csökkentése, ami a legolcsóbb \nmegoldásnak tűnhet.",
      "s-mdwds-chapter-3-subchapter-2-p2": "Azonban amellett, hogy esztétikailag nyilvánvalóan rossz megközelítés, használhatósági gondokat is okozhat egy ilyen \"javítás\". Éppen ezért \nfontos, hogy ne csak az aktuális tartalmat tartsuk szem előtt, hanem számoljunk azzal is, hogy ez hogyan bővülhet a későbbiekben.",
      "s-mdwds-chapter-3-subchapter-2-p3": "A skálázhatóság alapja, hogy olyan megoldásokat kell tervezni, ami sokkal több elem megjelenítését teszi lehetővé, mint amivel számolunk (vagy \namit lehetségesnek tartunk). Bizonyos esetekben ez akár végtelen is lehet - gondoljunk csak a Facebook hírfolyamára. Amikor az oldal aljára \nérünk, újabb elemeket tölt be, így a végtelenségig (vagyis addig, amíg engedi a tartalom, illetve a böngésző kapacitása) nézhetjük a \nfeltöltéseket.",
      "s-mdwds-chapter-3-subchapter-2-p4": "Mint korábban írtam, a terv készítésekor pontosan tudjuk, hogy minek kell helyet kapnia az oldalon, így a tervezési időt kezdetben növelni fogja, \nhogy jelenleg nem létező állapotokat is számításba veszünk munkánk során. Ennek az irányelvnek a betartása tehát hosszútávon térül meg, ahogy \negyre több funkcióval bővül a termék. Ilyenkor ahelyett, hogy megpróbáljuk beleerőszakolni a plusz elemeket a meglévő felületi egységekbe, vagy \nmegpróbáljuk kijavítani és részben (vagy teljesen) újratervezni és újrakódolni a komponenst, egyszerűen kibővíthetjük, ugyanis előrelátóan \ngondoltunk erre az eshetőségre.",
      "s-mdwds-chapter-3-subtitle-3": "A reszponzivitás előtérbe helyezése",
      "s-mdwds-chapter-3-subchapter-3-img1": "Mouláris, skálázható, reszponzív megközelítés a fejléctervre a Chameleonban",
      "s-mdwds-chapter-3-subchapter-3-p1": "Habár már a 2000-es évek közepe táján jelentek meg mobileszközök, amik alkalmasak voltak weboldalak megjelenítésére, a reszponzivitás igazán \nnagy figyelmet csak 2012 körül kapott. Ekkor váltak ugyanis széleskörben elérhetővé az okostelefonok és tabletek. Egészen addig, mivel az \nemberek többsége asztali gépről böngészett, külön oldalként kezelték a  mobil változatát egy felületnek, így teljesen más kód szolgálta ki, \nmint az asztali weboldalt. Ez a gyakrolatban úgy néz ki, hogy amikor a felhasználó felmegy az oldalra mobilról, egy átirányítás történik a \n\"domain.com\"-ról az \"m.domain.com\"-ra.",
      "s-mdwds-chapter-3-subchapter-3-p2": "A reszponzív tervezés ezzel szemben úgy működik, hogy a weboldal CSS kódja úgynevezett \"media-query\"-k segítségével megvizsgálja a készülék \nszélességét, és a stílusokat ez alapján rendeli a HTML elemekhez, így lehetővé téve dinamikus layout létrehozását. Az előző példával szemben \nitt ugyanaz a kód szolgálja ki az összes nézetet, csak a kódnak bizonyos elemei felülíródnak kijelzőmérettől függően. Habár még mindig vannak \n\"M-dot\" weboldalak, <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/blog/m-dot-sites-are-dying-long-live-responsive-design/\">a \nszámuk drasztikusan csökkent,</a> hiszen a reszponzív tervezéssel ellentétben egy layoutra épülnek, így a mobil és az asztali nézet közti \nlehetőségekre továbbra sem lesz megfelelően optimalizálva a weboldal.",
      "s-mdwds-chapter-3-subchapter-3-p3": "Optimális esetben a komponensek tervezése elkülönül a layouttevezéstől, mivel az a cél, hogy a komponensek minél függetlenebbek legyenek a \nkörnyezettől. Mikor az oldalstruktúrára készítünk drótvázakat, kézenfekvőnek tűnik a reszponzív viselkedés számításba vétele, azonban a \nkomponenseknél már gyakran megfeledkezünk arról, hogy mindenekelőtt azt találjuk ki, hogy melyik kijelzőn mit- és hogyan szeretnénk mutatni. \nEhelyett elkészítjük az asztali változatot, majd utána megpróbáljuk összezsúfolni a varázslatos 320 pixeles szélességig (a ma népszerű \nokostelefonok alsó határa), és hogy reszponzívnak mondható legyen, beiktatunk még egy 600-800 pixeles tablet nézetet.",
      "s-mdwds-chapter-3-subchapter-3-p4": "A komponens alapú gondolkodás ezzel szemben segít bennünket abban, hogy\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://adamsilver.io/articles/stop-using-device-breakpoints/\">reszponzív egységek összességeként tekintsünk \na felületünkre,</a> hiszen egy elem csak akkor kerülhet be a közös könyvtárba, ha meg van tervezve, hogy hogyan fog különböző kijelzőméretekhez \nalkalmazkodni. Valamint segít abban is, hogy figyelmen kívül hagyjuk a népszerű kijelzőméreteket, és elszakadjunk az eszköz alapú megközelítéstől, \nés tartalomhoz igazítva állapítsuk meg a törésponjait a komponenseknek. Míg régebben még többé-kevésbé működött ez a megközelítés, ma már \nannyira különböző a kijelzők felbontása, hogy nem lehet kiválasztani a legnépszerűbbeket és kizárólag azokra tervezni, mert csak a töredékét \nfogják lefedni annak a nagy halmaznak, amilyen eszközökről a látogatók nézni fogják az oldalunkat.",
      "s-mdwds-chapter-3-subchapter-3-p5": "A lorant.design fejlécét ennek megfelelően terveztem. Először elkészítettem a Sketch szimbólumot különböző töréspontokhoz, amiket a tartalomhoz \nigazítottam, így minimálisra sikerült szorítanom a számukat, és ezzel elértem azt is, hogy mindegy, milyen kijelzőn jelenik meg, biztosan megflelő \nfelhasználói élményt fog nyújtani. Ha ki kellene egészíteni a fejlécet további menüpontokkal, akkor sem kellene sokat változtatnom rajta, csak \nannak a töréspontnak a minimum szélességét nagyobbra vennem, ami azért felelős, hogy a menü elemeit a lenyíló dobozba áthelyezze. Ezen az \negyszerű példán jól látható, hogy mit jelent a skálázhatóság és a reszponzív tervezés.",
      "s-mdwds-chapter-3-subtitle-4": "Design folyamatok integrációja az agilis szoftverfejlesztésbe",
      "s-mdwds-chapter-3-subchapter-4-p1": "A fentebbi pontok segítenek minket abban, hogy korszerű megközelítéssel álljunk munkának, hiszen a tervezés elsőszámú prioritásának a \nmodularitást vesszük - az elkészülő komponensek reszponzivitásuknak és skálázhatóságuknak köszönhetően könnyen beépíthetők lesznek különböző \nadottságú felületekbe. Az pedig a fejlesztőknek is kedvez, hogy feltehetően nem kell folyamatosan drasztikus módosításokat végezni a lekódolt \nkomponenseken, mert hosszútávra készülnek. Szóval, már tudjuk, hogy hogyan kell tervezni, a kérdés már csak az, hogy mit? A product designerek \nfeladata az üzleti igények átültetése működőképes termékbe, amit a felhasználók elkötelezetten fognak használni.",
      "s-mdwds-chapter-3-subchapter-4-p2": "Ahhoz, hogy megértsük, hogy modern környezetben milyen módon történik a haladás, vissza kell mennünk az időben egészen 2001-ig. Ekkor ugyanis \negy fejlesztőkből álló csoport összegyűlt, hogy megoldást keressen a szervezeteknél általánosan fellépő, elsősorban szervezési problémákra. \nA megoldás az <a target=\"_blank\" class=\"t-article__a\" href=\"http://agilemanifesto.org/iso/hu/manifesto.html\">Agilis kiáltvány</a> lett, aminek célja, hogy \nhatékonyabb és gyorsabb legyen a tervezés, és több idő maradjon a tényleges fejlesztésre, ami valós értékkel bír a felhasználók számára. \nA kiáltvány 12 elvre és 5 értékre épül, amik többnyire elég szabadon alkalmazhatóak, nem nyújtanak konkrét megoldásokat a szoftverfejlesztés \nmenetére, csupán támpontokat adnak, hogy a folyamatok minél gördülékenyebben történjenek.",
      "s-mdwds-chapter-3-subchapter-4-p3": "Azért is alkalmazzák előszeretettel, mert a szabályok elősegítik a gyors reagálást a változásokra, ezzel rugalmassá és piacközpontúvá téve \na tervezést. A kiáltvány egyik pontja például arról szól, hogy az agilis szoftverfejlesztés előnyben részesíti a működő szoftvert az átfogó \ndokumentációval szemben. Ennek oka, hogy időigényes a dokumentációk megírása és folyamatos frissítése, és az a munka, amit ezzel töltenénk, \nnem viszi közelebb közvetlenül a csapatot a szoftver minél gyorsabb elkészítéséhez. A kiáltvány pontjai érthetőek és jogosak, azonban \nelsősorban fejlesztésről szólnak, így designerként maradtak bennem kérdések. Attól lesz agilis a design folyamat, hogy a designer a termékfejlesztő \ncsapattal együtt dolgozik? Hogy fejlesztői meetingekre jár?",
      "s-mdwds-chapter-3-subchapter-4-p4": "Paul Adams az Intercomtól azt mondja, hogy a termék szállítása a felhasználóknak náluk csak a kezdete a termék életének. Megpróbálják a lehető \nleggyorsabban megtenni ezt, hogy minél előbb visszajelzéseket kapjanak azzal kapcsolatban, hogy a termékük valóban segíti a felhasználót. Azt \nis hozzáteszi, hogy az MVP-t (legkisebb életképes terméket) a cégek gyakran teljesen félreértelmezik, és összedobnak valamit, amiről azt sem \ntudják, hogy kelleni fog-e egyáltalán valakinek. Ezzel szemben, náluk egy prototípussal letesztelt termékként tekintenek rá, ami funkcionalitásban \nmég fejlődhet felhasználói igényektől függően, de létező problémákra nyújt egyszerű és átgondolt megoldást.",
      "s-mdwds-chapter-3-subchapter-4-p5": "A prototípussal való tesztelés az első lépés a folyamatos iteráció felé. Addig, amíg nincs mit tesztelni, és amíg nincsenek visszajelzések, \nnincs min módosítani. Nem elég tudni, hogy rosszul teljesít a termék, azt is tudni kell, hogy miért. És mivel a prototípus sokkal \nköltséghatékonyabb a fejlesztésnél, ezért nagy felelőssége van a design folyamatoknak abban, hogy megfelelő irányba tereljék a termék \nfejlődését. Ekkor értettem meg, hogy az agilitás nem abban rejlik, hogy a designer a fejlesztőkkel ül, vagy hogy ott van a meetingeken, \nhanem abban, hogy a csapattól megkapja azt a támogatást, ami szükséges ahhoz, hogy validálni tudja a kitalált fejlesztési irányokat, és \nmegoldási javaslatokat tudjon készíteni rájuk.",
      "s-mdwds-chapter-3-subchapter-4-p6": "Ebben segíthet például a folyamatos kapcsolattartás a UI fejlesztőkkel és a termékmenedzserrel. Saját tapasztalat volt, mikor átkerülve a \nfejlesztő csapathoz, rövidesen azt figyeltem meg, hogy a rendszeres egyeztetések hatására nem kész megoldásokat kapok, amiket elvárják tőlem, \nhogy megvalósítsak, hanem problémákat, amikre a megoldást is nekem kell megtalálni. Ez egy sokkal iteratívabb és rugalmasabb folyamathoz \nvezetett, ami lehetővé tette, hogy több megoldási javaslatot nyújtsak, amiből aszerint került kiválasztásra a végleges irány, hogy \negyensúlyban legyen az üzleti érték, a felhasználói igény és a fejlesztői erőforrás. Az iteratív megközelítés azért kifejezetten fontos, \nmert elsőre nagyon nehéz megfelelően, hibátlanul megtervezni és kivitelezni egy terméket vagy funkciót. Sőt, általában mindig lesz valami, \namin lehet még javítani, és ezeket a pontokat mérésekkel meg lehet állapítani.",
      "s-mdwds-chapter-3-subchapter-4-p7": "Azonban, mint említettem, a designereknek nem feltétlenül kell a fejlesztési csapattal együtt dolgozniuk ahhoz, hogy agilisan tudjanak \nműködni. Van egy centralizált megoldás is, ahol a designerek közösen ülnek és ötletelnek. Természetesen ennek is számtalan előnye lehet, \nmint például az, hogy sokkal több lehetőségük van visszajelzést adniuk egymás munkájára, hiszen jobban rálátnak, mintha egymástól külön \ndolgoznának. Ugyanez miatt könnyebb az egységes tervezés is, valamint az információ gyorsabb áramlása miatt gyorsan kijön, ha hasonló \nmegoldást kell két különböző felületre tervezni, ilyenkor megspórolva az extra munkát és az inkonzisztencia kockázatát.",
      "s-mdwds-chapter-3-subchapter-4-p8": "A sok előny ellenére mégis ritkán működik jól a centralizált modell. Lehet, hogy a tervek jobb minőségűek, a prototípusok kifinomultabbak, \na megoldások igényesebbek, azonban mit sem ér egy szép termék, ha nincs rá szükség. Mit sem ér egy szép prototípus, ha a lefejlesztett \ntermék nem úgy néz ki. Egy design rendszer megoldja azokat a problémákat, amik felmerülhetnek abban az esetben, amikor a designerek nem \nközös csapatban dolgoznak.",
      "s-mdwds-chapter-3-subchapter-4-p9": "Azonban van egy eset, amikor elkerülhetetlen a centralizált megközelítés, ez pedig egy teljesen új termék kitalálásának az esete. Ilyenkor \na tervezés ideális esetben <a target=\"_blank\" class=\"t-article__a\" href=\"http://www.gv.com/sprint/\">design sprinttel</a> kezdődik. A design sprint egy 5 \nnapos ötletelés és tervezés, ami egy működő prototípus tesztelésével zárul. Alapja a lean és a design thinking mószertana, a sprint lényegében \nennek a gyakorlati kivitelezése. Hosszúsága úgy van megtervezve, hogy egy teljes iteráció menjen alatta végbe: ez az ötleteléssel kezdődik az \nelső napon, ami üzleti vezetés és fejlesztés képviseletében történik. A következő két nap szól a tényleges tervezésről, ami egyénileg történik, \nhogy minél több és minél változatosabb megoldások szülessenek a problémára, amik közül közösen választanak a résztvevők egyet, és ezt az utolsó \nnapon letesztelik.",
      "s-mdwds-chapter-4-title": "Design rendszerek létrehozása",
      "s-mdwds-chapter-4-p1": "A design rendszerekhez számos fogalom kötődik, amikre valójában nincs egységes definíció. Minden vállalat másként építette be ezeket a \ntervezési megközelítéseket a munkafolyamataiba, így némileg mást jelentenek számukra. Mivel a design rendszerek nagyon forró témának \nszámítanak product design körökben, nagyon sok vállalat design csapata publikálja saját elveit, gondolatait és megközelítését, így alakítva \naz általános képet arról, hogy mit jelentenek az ehhez kapcsolódó fogalmak.",
      "s-mdwds-chapter-4-subtitle-1": "Principles (Szabályok)",
      "s-mdwds-chapter-4-subchapter-1-p1": "Ahhoz, hogy a tervezés egységesen, egy adott irányba történjen, meg kell határozni az alapvető szabályokat, amik kísérni fogják. Ez szükséges \nfeltétele egy jól működő rendszernek. Fontos, hogy a szabályok ne legyenek túl általánosak (szép, harmonikus, stb.), mivel ezek nem segítik a \ntervezést. Mindenki úgy ül neki a feladatnak, hogy tervez valami szépet. Helyette legyenek általános érvényűek, de elég konkrétak is. \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://developers.google.com/actions/design/principles\">A Google egyik szabálya például:</a>",
      "s-mdwds-chapter-4-subchapter-1-hl1": "Foglald le a kezdőket, és vonzd be a szakértőket. A sok emberre való tervezés nem egyenlő a legkisebb közös többszörösre való \ntervezéssel.",
      "s-mdwds-chapter-4-subchapter-1-p2": "Ez a szabály például segít abban, hogy a széles célcsoportra való tervezés ne menjen a funkcionalitás rovására. Elősegíti olyan felületek \ntervezését, amiket alapszinten könnyű megtanulni használni, azonban mellette elég összetettek ahhoz, hogy a jártasabb felhasználók igényeit \nis kielégítse.",
      "s-mdwds-chapter-4-subchapter-1-p3": "A design szabályok eltérhetnek egy vállalat csapatain belül. Egy admin felület tervezésénél például más szabályokat kell alkalmaznunk, mint \negy értékesítő oldalnál. Lehet, hogy az egyiknél jól működne mondjuk a szellős struktúra nagy, kihasználatlan helyekkel, a másiknál viszont \nnem. Attól, hogy a rendeltetéshez igazítjuk a szabályokat, még lehet hasonló az arculata a két különböző oldalnak.",
      "s-mdwds-chapter-4-subtitle-2": "Pattern Library (minta könyvtár)",
      "s-mdwds-chapter-4-subchapter-2-img1": "Részlet a Chameleon pattern library-jéből. Bizonyos elemeknek, mint például a fejléc és lábléc, több variációjuk is van. Ezek mint helyet \nkapnak a könyvtárban.",
      "s-mdwds-chapter-4-subchapter-2-p1": "A pattern (minta) egy felület ismétlődő eleme. Ha ezeket egy helyre összegyűjtjük, akkor egy olyan könyvtárat kapunk, ami tartalmazza azokat \naz építőelemeket, amikből egy felület jelentős része leképezhető. Ahhoz, hogy igazán effektív legyen ez a könyvtár, meg kell határoznunk azt \na szabályrendszert is, ami segít bennünket abban, hogy arra és úgy használjuk fel ezeket a komponenseket, amire tervezve lettek. A pattern \nlibrary-nek több szintje van. Egy kisebb vállalatnak lehet, hogy elég egy szerényebb gyűjteményt összeállítani Sketch-ben és Zeplinben vagy \nInVisionben közzétenni, míg egy nagyobb vállalat, ahol több embernek kell együtt dolgoznia, és ahol igazán fontos a design elemek- és a kód \nújrafelhasználhatósága, ott egy nagyon részletes könyvtárra van szükség, ami online elérhető, és a design patterneken kívül \nkódrészleteket is tartalmaz.",
      "s-mdwds-chapter-4-subtitle-3": "Style Guide (stílusszabályzat)",
      "s-mdwds-chapter-4-subchapter-3-p1": "A style guide a vállalat kevésbé konkretizálható vizuális- és verbális egységeinek alkalmazására ad útmutatást, mint például színek, \ntipográfia, illusztrációk- és ikonok stílusa, kommunikáció stílusa. Ezeket nem lehet olyan pontos szabályok közé szorítani, mint például \negy gombot, aminek az összes tulajdonsága CSS-sel leírható. A style guide és a pattern library kiegészítik egymást és együttesen alkalmazhatók \nigazán hatékonyan a tervezés folyamán.",
      "s-mdwds-chapter-4-subchapter-3-p2": "A style guide a legfontosabb állomás az egységes megjelenés kialakításában. Tegyük fel, hogy design folyamatainkban nem használunk \nkomponenseket. Ez némi inkonzisztenciát fog eredményezni, de koránt sem akkorát, mintha nem lennének egyezményesen meghatározva az alapvető \nstílusok, mint például a színek. Vagy ha a szöveges tartalmakat nézzük, gondoljunk csak bele, hogy mennyire furcsa felhasználói élményhez \nvezet, ha az egyik oldalon tegezzük a felhasználót, egy másikon pedig magázzuk.",
      "s-mdwds-chapter-4-subchapter-3-p3": "A UXPin a style guide-ot úgy határozza meg,\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/blog/design-systems-vs-pattern-libraries-vs-style-guides-whats-difference/\">mint \negy olyan egységet, ami összefogja a stílusokat, patterneket és szabályokat.</a> Így nézve a style guide a rendszerben nem egy különálló \nfejezet, hanem az összes fejezetnek egy kiegészítő eleme. Egy színpaletta önmagában nem írja le a stílust, ehhez ki kell egészíteni szöveges \nmagyarázattal.",
      "s-mdwds-chapter-4-subchapter-3-p4": "Ami érdekes, hogy ezzel szemben <a target=\"_blank\" class=\"t-article__a\" href=\"http://bradfrost.github.io/style-guide-guide/\">Brad Frost a \nstyle guide-ot a design rendszer megvalósult dokumentumának tekinti,</a> majdhogynem megegyező fogalomként alkalmazza a kettőt. Természetesen \nnincs értelme kifejezéseken ugrálni, valójában csak az a fontos, hogy vállalaton belül legyenek ezek a fogalmak tisztázva a félreértések \nelkerülése végett.",
      "s-mdwds-chapter-4-subtitle-4": "Design system (design rendszer)",
      "s-mdwds-chapter-4-subchapter-4-img1": "A Trello design rendszere egy nyilvánosan elérhető weboldal, ami tartalmazza a brand irányelveit, stílusait, komponenseit és a munkához \nszükséges letölthető anyagokat.",
      "s-mdwds-chapter-4-subchapter-4-p1": "A design rendszer a fentebb megfogalmazott részegységekből épül fel azzal a céllal, hogy előtérbe hozza az egységesítést, ami kiterjed \na vizuális és írott kommunikációs tartalomra.",
      "s-mdwds-chapter-4-subchapter-4-p2": "Ahány design rendszer, annyi megvalósítás, hiszen minden terméknek különbözik a célja, célcsoportja, fókusza, stb. Egy autómárka, mint \npéldául az Audi, nem fog akkora figyelmet fordítani a webes megjelenésére, mint egy olyan márka, aminek elsődleges terméke digitális alapú. \nA lényeg csak annyi, hogy segítse a különböző területen dolgozó embereket a kollaboratív tervezésben.",
      "s-mdwds-chapter-4-subchapter-4-p3": "Itt azonban felmerül kérdés, hogy milyen formában fog eljutni ez a sok információ a rendszer felhasználóihoz? A pattern library-nál már \nfelmerült az a megoldás, amit nagyobb cégek előszeretettel alkalmaznak, hogy egy erre a célra dedikált oldalon megtekinthető az összes \nkomponens demó verziója, az implementációs kódjával együtt. És ha már itt tartunk, miért ne kerülhetne fel ide az összes stílus, szabály \nés felhasználási javaslat is? Fontos könnyen elérhetővé tenni a rendszert, ha azt szeretnénk, hogy minél többen és minél többet használják. \nHa strukturálatlan  Drive mappák mélyéről kell kibányászni a szanaszét tartott dokumentumokat, akkor azzal nem csak nehezítjük a fejlesztését \nés karbantartását, de el is vesszük a felhasználók kedvét a használatától.",
      "s-mdwds-chapter-4-subchapter-4-p4": "Nathan Curtis az Atlassiantól így vélekedik a design rendszerről: \"A design rendszer nem egy projekt. Ez egy termék, ami termékeket szolgál ki.\" - \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://medium.com/eightshapes-llc/a-design-system-isn-t-a-project-it-s-a-product-serving-products-74dcfffef935\">Medium \ncikkjében írja,</a> hogy fontos, hogy mind a készítők, mind pedig a felhasználók tisztában legyenek azzal, hogy ez nem egy projekt, hanem egy \ntermék. Ez azt jelenti, hogy folyamatos erőforrást és költségvetést kell dedikálni a fenntartásához. Nem elég egyszer elkészíteni és \nelégedetten hátradőlni, mivel a termékek, amiket a rendszer szolgál, folyamatosan változni fognak. Ha a rendszer nem változik velük együtt, \nakkor el fog avulni. Sőt, a változásnak a rendszertől kell indulnia, és a termékeknek kell reagálniuk rá, nem pedig fordítva. Hasonló \ngondolatokat fogalmaz meg Brad Frost is <a target=\"_blank\" class=\"t-article__a\" href=\"http://atomicdesign.bradfrost.com/chapter-5/>az Atomic Design utolsó \nfejezetében,</a> amiben a design rendszerek fenntarthatóságáról ír.",
      "s-mdwds-chapter-4-subtitle-5": "Design language (design nyelv)",
      "s-mdwds-chapter-4-subchapter-5-p1": "A design nyelv valójában nem sokban különbözik a design rendszerektől, így nehéz megfogni, hogy mikor lép ki a határukból. Szerintem ez \nakkor történik meg, amikor nagyobb felhasználói közönségre tervezik a rendszert, mint maga a szervezet (habár \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://airbnb.design/the-way-we-build/>az Airbnb</a> és\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.ibm.com/design/language/>az IBM</a> is language-nek nevezi a saját rendszerét, pedig nekik nem \ncéljuk a szervezeten kívüli terjesztés. Ez alapján egy másik olvasatban a két kifejezés szinonímaként is értelmezhető).",
      "s-mdwds-chapter-4-subchapter-5-p2": "A Material Designt ezzel szemben azonban kifejezetten azzal a céllal tervezte a Google, hogy univerzális szabályokat hozzon létre a \nfelhasználói élmény javítása érdekében. Nem kell túlragozni, hogy a Google-nek miért jó, ha mindenki az ő által megfogalmazott elveket \nköveti, azonban ami ennél fontosabb, hogy ez miért jó a felhasználó szervezeteknek, illetve az általuk létrehozott termékek felhasználóinak.",
      "s-mdwds-chapter-4-subchapter-5-p3": "Szervezeti szinten a legnagyobb előnye talán az, hogy biztosít egy alapot a saját rendszer felépítéséhez. Nehéz vitatkozni a komponens alapú \ntervezés előnyeivel és hatásosságával, azonban tény, hogy idő és erőforrás megfelelően kialakítani. A Material Design annyira bonyolult és \nösszetett, hogy ezt a részletességet a Google-ön kívül senki nem tudja kihasználni, azonban rengeteg pattern előre meg van benne tervezve, \namik feltehetően átfogó kutatások eredményeként jöttek létre, ezért célszerű építkezni ezekre, hogy felgyorsítsuk a tervezést.",
      "s-mdwds-chapter-4-subchapter-5-p4": "A felhasználókat pedig úgy segíti, hogy ahol Material Design patterneken alapuló komponensekkel találkoznak, ott gyorsabban megtanulják a \nfelületek használatát, mivel egészen biztosan találkoztak már hasonló megoldásokkal (ha máshol nem, a Google felületein biztosan, azokat \npedig nehéz elkerülni).",
      "s-mdwds-chapter-4-subtitle-6": "Design rendszerek előkészületei",
      "s-mdwds-chapter-4-subchapter-6-p1": "Egy napjainkban induló startup számára egyértelműen jó választás a tervezést design rendszerrel kezdeni, hiszen jelentősen csökkenti a termék \nkomplexitását, és segít abban, hogy köré egy erős és határozott brand épüljön. Nagyon sok pozitív vonzata is van a céges mentalitásra nézve, \nha a design központi szerepet kap: előtérbe kerülnek az egyszerű megoldások, a felhasználóközpontúság, és a megrendelők is jobban belelátnak, \nhogy miről szól a webes tervezés. A rendszert ők is bármikor felkereshetik és tanulmányozhatják, hiszen nagyon sok része van, ami érinti őket, \nés amihez hozzá tudnak tenni.",
      "s-mdwds-chapter-4-subchapter-6-p2": "Egy évek óta működő vállalatnál a design rendszer gondolata elég futurisztikusnak tűnhet elsőre, hiszen már kiépített, bonyolult rendszerek \nvannak, amit nem lehet egyik napról a másikra megváltoztatni. Azonban, ha a vállalat valóban hosszú távú célokat tűz ki maga elé, érdemes \nkis lépésekben közeledni felé, és időt és erőforrást szánni rá. Először érdemes azokra a problémákra koncentrálni, amiket viszonylag könnyű \nmegoldani, viszont sok terhet okoznak.",
      "s-mdwds-chapter-4-subchapter-6-p3": "A tervezés kezdetén érdemes feltenni pár kérdést, ami segít a rendszer céljának tisztázásában: kik fogják használni? Mi segítené őket a munkájuk \nminél hatékonyabb és minél magasabb színvonalú elvégzésében? Hol fogják elérni a rendszert? Mekkora erőforrást és költségvetést szán rá a \nszervezet? Kik dolgoznak majd rajta? Hogyan és kik által lesz frissítve? Kinek és milyen formában kell jelezni a hiányosságokat és a módosítási \nigényeket? Amíg ezek a kérdések nincsenek tisztázva, jó esély van arra, hogy már az elindulásának napján halálra lesz ítélve – éppen ezért érdemes \nfelmérést készíteni és alaposan megtervezni. Nincs értelme bemutatni egy olyan rendszert, amit a létrehozás után senki nem akar karbantartani, \nmert így nem fizetődik ki a kezdeti befektetett energia, ráadásul negatív visszhangja lesz a kezdeményezésnek. Ha rosszul kerül megtervezésre, \nés csak hátráltatja a munkavégzőket, értelmetlen keretek közé szorítja őket ahelyett, hogy megoldásokat nyújtana nekik, akkor nem fogják használni. \nEgy jó design rendszert nem kötelességből használnak, hanem azért, mert könnyebb általa a munka.",
      "s-mdwds-chapter-4-subchapter-6-p4": "Elég jó esély van arra is, hogy a fejlesztőktől és a designerektől megkapja a rendszer az induláshoz szükséges támogatást, azonban a vezetőség által \nnem kerül jóváhagyásra. Brad Frost erre ezt mondja: \"Kérj elfogadást, ne pedig engedélyt\" – ha egy csapat úgy gondolja, hogy szüksége van rá \n(márpedig jó eséllyel szüksége van rá), akkor saját dolga szakmájának legjobb gyakorlatait követnie.",
      "s-mdwds-chapter-4-subchapter-6-p5": "Lehet, hogy kezdetben elég, ha csak a design és a UI fejlesztési részleg számára készül, ebben az esetben például akár munka melletti projekt \nkeretei között is meg lehet tervezni, vagy akár egy hackathon kíséretében. Majd, amikor mindenki látja a hasznosságát, és egyre nagyobb figyelmet \nés támogatást kap, el lehet kezdeni kibővíteni.",
      "s-mdwds-chapter-4-subtitle-7": "Design rendszerek tervezése",
      "s-mdwds-chapter-4-subchapter-7-p1": "Az elmúlt másfél év során több design rendszer kialakításában játszottam aktív szerepet, legújabb projektem pedig a Chameleon volt, ami a \nlorant.design mögött működő rendszer. A Chameleon elég kisméretű, azonban teljeskörű, így megterveztem benne az újrafelhasználható Sketch \nszimbólumokat, az ezekhez tartozó <a target=\"_blank\" class=\"t-article__a\" href=\"http://riotjs.com/>Riot.js</a> alapú komponenseket, megírtam a tervezésnél \nhasznált szabályokat, valamint kitaláltam az oldal kommunikációs stílusát is. A következő sorokat személyes tapasztalataim támasztják alá.",
      "s-mdwds-chapter-4-subchapter-7-p2": "Ha a design rendszer túl sok opciót biztosít, akkor lassítja a döntéshozást - nehezebb feldolgozni az információt, és az emberi pszichológia \núgy működik, hogy az összes lehetőség ismeretében szeretne dönteni, <a target=\"_blank\" class=\"t-article__a\" href=\"https://markmanson.net/analysis-paralysis>mert \nfél attól, hogy van jobb választás,</a> csak nem találta még meg. Ha viszont túl kevés lehetőséget biztosít, akkor tervezni kell egy új, \nnem szabványos megoldást, egy \"kívánságpizzát\", ami drágább lesz, hiszen új komponenst kell fejleszteni. Emellett növelni fogja a rendszer \nkomplexitását is (képzeljük el, ha mindenki által rendelt \"kívánságpizza\" felkerülne az étlapra - a pár választásból hirtelen több száz lenne, \nköztük olyanok, amik alig térnek el egymástól).",
      "s-mdwds-chapter-4-subchapter-7-p3": "Egy jó design rendszer tehát az egyensúlyról szól: annyi választási lehetőséget biztosít, amennyire szükség van, de nem többet. Vannak design \nrendszerek, amik legalább 10 különböző árnyalatot nyújtanak színenként. Habár vannak szituációk, amikben indokolt lehet ez a széles színpaletta, \náltalában a túl sok választási lehetőség zavart és inkonzisztenciát okoz.",
      "s-mdwds-chapter-4-subchapter-7-p4": "Ennek az ellentétével is találkoztam már, amiben összesen 10-12 szín volt. Azzal magyarázták, hogy nem akarják, hogy túl színes legyen az oldal, \nmert egy komoly, letisztult és érett márkát kell reprezentálnia. Nem lepődtem meg nagyon, mikor átfuttattam az oldalt a \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://cssstats.com/>CSS Stats</a> nevű webes alkalmazáson, ami összegyűjtötte az összes CSS-ben deklarált színt, \nés láttam, hogy számuk a 40-hez közelít. Egyszerűen nem lehet 10 színből interaktív felületet tervezni. Annyi állapotváltozás van, aminek hatására \nmeg kell változnia egy-egy elem színének, hogy egy ilyen döntés zsákutcába tereli a designt. A felületek úgy fognak kinézni, mintha drótvázak \nlennének, miközben számtalan új szín kerül meghatározásra, mert időnként jön egy-egy szituáció, amihez nincs megfelelő szín a készletben.",
      "s-mdwds-chapter-4-subchapter-7-p5": "A Chameleon tervezése közben egy olyan megközelítést alkalmaztam, aminek lényege az volt, hogy nem vezetek be egyedülálló színt, csak színcsaládot. \nA színcsaládok legalább két színből álltak, még akkor is, ha volt olyan, amit csak később, vagy esetleg még egyáltalán nem kellett felhasználnom. \nEz azért volt jó, mert amikor azonos színű, de más árnyalatú kiegészítőszínt kellett alkalmaznom, nem volt kérdés, hogy ez milyen legyen. Kisebb \nrendszerek esetben jól működhet ez a megközelítés, hiszen általában 2-3 árnyalatnál nincs szükség többre egy színből (kivéve a szürkét). Nagyobb \nrendszereknél pedig jól alkalmazható a <a target=\"_blank\" class=\"t-article__a\" href=\"https://material.io/guidelines/style/color.html>Material \nDesign-féle skála,</a> amiben a színek százas értékeket kapnak. Annyit kell csak bevezetni egyszerre, amennyire valóban szükség van, de az elnevezésnek \nköszönhetően bármikor bővíthető a készlet.",
      "s-mdwds-chapter-4-subchapter-7-p6": "A rendszer vizuális megjelenésének tervezése közben érdemes lehet már a szabályokra is gondolni. Ha egymástól elszeparálva készülnek el a szabályok \nés a vizuális egységek, akkor meglehet, hogy nem lesznek összhangban. A tervezés egy hosszú kísérletezés, aminek irányított módon kell történnie. \nA Chameleon utolsó szabályának például ezt fogalmaztam meg: \"Kísérletezés támogatása: teret kell adni a kísérletezésnek a lenyűgöző eredmény eléréséhez.\" \nEz azt jelenti, hogy a tervezési folyamatok alatt minél jobban törekedni kell a különböző, és minél változatosabb megoldások készítésére, bevállalva \naz esetleges fejlesztési nehézségeket, vagy a kudarcot. Ahhoz, hogy ez a szemlélet ki tudjon bontakozni (főleg egy olyan szervezetben, amiben többen \ndolgoznak közösen), fontos minél korábban meghatározni.",
      "s-mdwds-chapter-4-subchapter-7-p7": "A design rendszerek alkalmazása egy általános legjobb gyakorlat lett az utóbbi években, és habár legtöbbet a tech óriások rendszereire hivatkoznak, \naz ezeknél sokkal kisebb vállalatok is profitálhatnak egy saját rendszerből. A legfontosabb, amit észben kell tartani tervezésüknél, hogy ez egy \nvégtelen folyamat kezdete. Amíg a termékek élnek, amiket támogat, addig a rendszert nem lehet magára hagyni. Ha úgy tűnik, hogy túl sok erőforrást \nemészt fel, vagy nem térül meg, akkor feltehetően tervezési probléma áll a háttérben. A design rendszer rossz kérdésekre ad választ, vagy nem megfelelő \nválaszt ad a kérdésekre.",
      "s-mdwds-caption-tcds": "Több saját példát is mutattam az oldalam mögött álló design rendszerből. Ha felkeltettem az érdeklődésedet, itt olvashatsz részletesebben a \nfelépítéséről és működéséről:"
    },
    "en": {
      "s-oops": "Ooops!",
      "s-404": "That went missing : o",
      "s-signup-cover-h2": "Subscribe to my mailing list!",
      "s-signup-cover-h1": "You deserve the good stuff",
      "s-email-title-03": "The Beauty that Surrounds Us",
      "s-email-date-03": "July 12, 2018",
      "s-email-title-02": "The Bad in the Good",
      "s-email-date-02": "June 27, 2018",
      "s-email-title-01": "Celebrating my website launch with new paintings!",
      "s-email-date-01": "June 16, 2018",
      "s-navigation-name": "Lorant Toth",
      "s-navigation-my-story": "My Story",
      "s-navigation-projects": "Projects",
      "s-navigation-resume": "Resume",
      "s-navigation-mailing-list": "Mailing list",
      "s-cookiebar-content": "My website uses cookies.",
      "s-cookiebar-details": "Details",
      "s-cookiebar-accept": "I accept",
      "s-emailform-title": "Get notified about project updates!",
      "s-emailform-p": "If you'd like to be the first to get notified about my new uploads and you're curious about the story of them, be sure to subscribe to my mailing list!\nI might send exclusive content occasionally.",
      "s-emailform-email": "Gonna send it to this email",
      "s-emailform-nickname": "That's how I'm gonna call you",
      "s-emailform-cta": "Subscribe!",
      "s-emailform-hide": "Hide this form",
      "s-articlepreview-art-title": "My drawings<br>and paintings",
      "s-articlepreview-design-title": "Modular approaches<br>in product design",
      "s-articlepreview-dd-title": "Daydreaming:<br>Dreaming awake",
      "s-articlepreview-ds-title": "The Divided Soul:<br>Fantasy Landscapes",
      "s-articlepreview-td-title": "Graphite- and charcoal<br>portrait art",
      "s-articlepreview-mdwds-title": "Modular design<br>with design systems",
      "s-articlepreview-tcds-title": "The Chameleon<br>Design System",
      "s-articlepreview-project-cta": "Continue to project",
      "s-articlepreview-projects-cta": "Continue to projects",
      "s-articledisplay-caption-source": "Image source",
      "s-mystory-title": "Hey! I'm Lorant.",
      "s-mystory-subtitle": "I design clean user interfaces for online products.",
      "s-mystory-p1": "Although this was not always the case. A few years ago I wanted to be a concept artist to work on cool movies and games. I like to draw very much, but in \nrecent years I've come to realize that I wouldn’t like it to be my profession.",
      "s-mystory-p2": "As I began to get acquainted with product design, it became obvious to me that I found my craft. Web design has long been close to me, but frankly, coding \nhas never been my strength, and I have lost my enthusiasm as I couldn’t bring my designs to life. As I started working as a product designer, my problem \nvanished, as the front-end developers took care of this part.",
      "s-mystory-p3": "However, I soon realized that in order to create beautiful and technologically deliberate plans, basic knowledge of HTML, CSS and JavaScript is essential. \nThere are two reasons for this: in design, it's really important to be aware of how it's going to be implemented. Secondly, despite the fact that more and \nmore prototype apps are emerging on the market, I often feel they struggle to represent responsive layouts and interactive interfaces.",
      "s-mystory-p4": "So I started writing code in my free time after a couple of years again. There’s still room for improvement, but now I can see how my designs and solutions \nbecame more and more sophisticated while paying close attention to the systematic approach of the design structure. This is also appreciated by front-end \ndevelopers, as my improved velocity means more challenge for them as well. :o",
      "s-mystory-caption-design": "    I wrote my university thesis about the importance of modular approach in design. If you are interested in a light reading with great resources about how \n    modularity became a standard in software development, eventually in web design, I highly recommend it.",
      "s-mystory-caption-art": "    Lastly, if you're interested in my drawings, which I'm scribbling in my free time, you can find them here; and feel free to use them as wallpapers, \n    they are available for download in 1080p.",
      "s-mystory-thanksforvisit": "It's great to see you here. Let's stay in touch!",
      "s-daydreaming-title": "Daydreaming",
      "s-dividedsoul-title": "The Divided Soul",
      "s-portraitart-title": "Portrait Art",
      "s-art-see-all": "See all",
      "s-art-artworks": "artworks",
      "s-art-daydreaming-description": "Figurative painting project with cute pets and moody lights.",
      "s-art-dividedsoul-description": "Fantasy landscape art project showcasing scenes from a breathtaking imaginary world.",
      "s-art-portraitart-description": "Traditional drawings of Pinterest portraits featuring the best chillout tracks.",
      "s-artsubpage-to-artworks": "Back to the artworks",
      "s-artsubpage-to-story": "Read the story",
      "s-dd-about-p1": "Daydreaming is the result of a spontaneous experiment. It wasn’t indended to be a project, but a single piece. It was the summer of 2016; I \nhad plenty of spare time through the days, and wanted to keep myself busy. I really love the colorful world of the Divided Soul, but it started to \nbecome a bit too much. I wanted to try something new, something more dynamic and human-oriented.",
      "s-dd-about-p2": "It all started with a low resolution Pinterest image, although it was enough to provide inspiration for the concept. I finished the first painting \nin 3 days, I worked from morning to night. I liked the whole process so much that I started the next painting in the next days, and I finished that \none in a week. The third one was Bad Karma, the iconic painting of the series, which came across my sight a handful of times already.",
      "s-dd-about-p3": "However, as time passed, I started to move away from the original mood in a wrong direction. The series became more colorful, and the concept \nmore strained. Because of that I have already removed a bunch of paintings from the collection, although they still can be found on \n<a href=\"https://lorantart.deviantart.com/\" class=\"t-article--sliding__a\" target=\"blank\">my DeviantArt profile.</a> \nUnfortunately I can’t continue the work with the same intensity as I used to, but I consider this my most original project and continuously \nworking to return into the early direction.",
      "s-dd-07-title": "In My Mind",
      "s-dd-07-date": "June 2018",
      "s-dd-06-title": "Bad Karma",
      "s-dd-06-date": "August 2016",
      "s-dd-05-title": "Daydreaming",
      "s-dd-05-date": "July 2016",
      "s-dd-04-title": "Daydream",
      "s-dd-04-date": "July 2016",
      "s-dd-03-title": "Stressed Out",
      "s-dd-03-date": "October 2016",
      "s-dd-02-title": "Light of Hope",
      "s-dd-02-date": "December 2016",
      "s-dd-01-title": "Catch and Release",
      "s-dd-01-date": "February 2017",
      "s-ds-about-p1": "The Divided Soul is a fantasy series of digital illustrations that I started at the end of the summer of 2015, and I’m still working on it to this \nday. It started as a practice project inspired by <a href=\"http://noahbradley.com\" class=\"t-article--sliding__a\" target=\"blank\">Noah Bradley’s The \nSin of Man.</a> Over the last few years, I've improved a lot and the project has gone a long way too, so lately I started removing paintings \nthat I thought were less suited to the world I imagined. If you're interested, you'll still find them on my \n<a href=\"https://lorantart.deviantart.com/\" class=\"t-article--sliding__a\" target=\"blank\">DeviantArt profile.</a>",
      "s-ds-about-p2": "The Divided Soul is very close to my heart, although I still consider it a hobby project. I’m glad to see it is reaching wide audiences, \nbut apart from fulfilling my creativity and daydreams I don’t have any plans with it. Therefore, the entire series can be freely downloaded and used \n<a href=\"#\" class=\"t-article--sliding__a\">within certain terms.</a>",
      "s-ds-about-p3": "I'm thankful for today's open and helpful creative community &mdash;as I think it inspires everyone to fulfill their dreams. And also for 9GAG, \nwhere the Divided Soul received a <a href=\"https://9gag.com/gag/a8MqeAd\" class=\"t-article--sliding__a\" target=\"blank\">warm welcome.</a>",
      "s-ds-about-p4": "If you like my works, you’ll certainly dig their too:\n<a href=\"https://artstation.com/jordangrimmer\" class=\"t-article--sliding__a\" target=\"blank\">Jordan Grimmer</a>,\n<a href=\"https://artstation.com/noahbradley\"   class=\"t-article--sliding__a\" target=\"blank\">Noah Bradley</a>,\n<a href=\"https://artstation.com/kimagu\"        class=\"t-article--sliding__a\" target=\"blank\">Kimagu</a>,\n<a href=\"https://morippin.deviantart.com\"      class=\"t-article--sliding__a\" target=\"blank\">Morippin</a>,\n<a href=\"https://artstation.com/danyiart\"      class=\"t-article--sliding__a\" target=\"blank\">DanyiArt</a>,\n<a href=\"https://artstation.com/markmolnar\"    class=\"t-article--sliding__a\" target=\"blank\">Molnar Mark</a>,\n<a href=\"https://artstation.com/jotto\"         class=\"t-article--sliding__a\" target=\"blank\">Otto Szatmari</a>.",
      "s-ds-13-title": "Path of Destruction",
      "s-ds-13-date": "July 2017",
      "s-ds-12-title": "Awakening",
      "s-ds-12-date": "November 2017",
      "s-ds-11-title": "Born of a Magnificient Creature",
      "s-ds-11-date": "August 2016",
      "s-ds-10-title": "Neverland",
      "s-ds-10-date": "December 2016",
      "s-ds-09-title": "Wisp Hunter",
      "s-ds-09-date": "November 2016",
      "s-ds-08-title": "Master's Call",
      "s-ds-08-date": "March 2016",
      "s-ds-07-title": "Still and Silent",
      "s-ds-07-date": "January 2017",
      "s-ds-06-title": "Lost Shores",
      "s-ds-06-date": "July 2016",
      "s-ds-05-title": "Worlds",
      "s-ds-05-date": "December 2016",
      "s-ds-04-title": "Guardian of eternity",
      "s-ds-04-date": "April 2016",
      "s-ds-03-title": "Heart of the Mountain",
      "s-ds-03-date": "August 2016",
      "s-ds-02-title": "Valley of Legends",
      "s-ds-02-date": "January 2016",
      "s-ds-01-title": "Entrance of a New World",
      "s-ds-01-date": "May 2016",
      "s-td-about-p1": "During the last couple of years I have drawn at least a hundred graphite portraits. I remember how hard it was the beginning &mdash;I did almost everything \nwrong. Then one went quite well, so I stopped for a minute to analyze what I was doing differently than before. That's when I realized that drawings are not \nphotographs, so I shouldn’t treat them like they were. I've always used reference pictures, but I was trying to make an exact copy, instead of my \ninterpretation of the image.",
      "s-td-about-p2": "For me, the recipe of a successful drawing is making it distinct from the reference image, to a level where if you are not comparing them side by side, the \nsimilarity is not obvious. Along this, it does well on the choice of subject, composition, anatomy, and values. This is not an easy task, and \nalthough I have been practicing for years now, I still struggle with this &mdash;so much that only one of every ten drawings do I consider to be a success. \nThe rest fall into the category of entertainment and practice and finish in the depths of my drawer so nobody will ever see them :) \n<a target=\"blank\" href=\"https://instagram.com/lorantart\" class=\"t-article--sliding__a\"> (Well, perhaps one or two might end up on my Instagram).</a>",
      "s-td-about-p3": "The following artists were most inspiring for me and I learned a lot from them:\n<a href=\"http://proko.com/\"          class=\"t-article--sliding__a\" target=\"blank\">Stan Prokopenko</a>,\n<a href=\"http://stevehustonart.com/\" class=\"t-article--sliding__a\" target=\"blank\">Steve Huston</a>,\n<a href=\"http://caseybaugh.com/\"     class=\"t-article--sliding__a\" target=\"blank\">Casey Baugh</a>,\n<a href=\"http://redrabbit7.com/\"     class=\"t-article--sliding__a\" target=\"blank\">Jeremy Mann</a>,\n<a href=\"http://alpayefe.com/\"       class=\"t-article--sliding__a\" target=\"blank\">Alpay Efe</a>.",
      "s-td-about-p4": "I gave the drawings the song title I listened to while I was making it. (Psst! EDM danger...)",
      "s-td-14-title": "Let Me Down Slowly",
      "s-td-14-date": "June 2018",
      "s-td-13-title": "Miami 2 Ibiza",
      "s-td-13-date": "April 2018",
      "s-td-12-title": "Revolution",
      "s-td-12-date": "June 2016",
      "s-td-11-title": "I'd Love to Change the World",
      "s-td-11-date": "June 2016",
      "s-td-10-title": "Kings",
      "s-td-10-date": "October 2015",
      "s-td-09-title": "Idfc",
      "s-td-09-date": "July 2016",
      "s-td-08-title": "Woke the F*ck Up",
      "s-td-08-date": "July 2016",
      "s-td-07-title": "The Calling",
      "s-td-07-date": "August 2016",
      "s-td-06-title": "Unity",
      "s-td-06-date": "August 2016",
      "s-td-05-title": "Monody",
      "s-td-05-date": "August 2016",
      "s-td-04-title": "Say It",
      "s-td-04-date": "September 2016",
      "s-td-03-title": "Rush Over Me",
      "s-td-03-date": "October 2016",
      "s-td-02-title": "Afterlife",
      "s-td-02-date": "October 2016",
      "s-td-01-title": "It's All On U",
      "s-td-01-date": "May 2017",
      "s-mdwds-title": "Modular Design with Design Systems",
      "s-tcds-title": "The Chameleon Design System",
      "s-design-mdwds-description": "The road of design to modular approaches. Component-based design theory and practice in modern software development. (Awaiting English translation)",
      "s-design-tcds-description": "Presentation of the rules, structure and creation process of the design system behind lorant.design. (Awaiting English translation)",
      "s-design-proceedstudy": "Continue to study",
      "s-design-proceedarticle": "Continue to article",
      "s-mdwds-cover-h1": "Modular Design with<br> Design Systems",
      "s-mdwds-prologue-title": "Prologue",
      "s-mdwds-prologue-p1": "Recently, in product design circles, design systems are perhaps the most discussed topics. So much, that not only the giant tech companies feel the need to \ncreate and maintain one, but even companies that strictly market physical, tangible products, like Royal Canin or Audi.",
      "s-mdwds-prologue-p2": "Since it's such a hot topic, it's no wonder that so many people has already written about the creation process like Brad Frost in Atomic Design or Alla Kholmatova \nin Design Systems. These Books perfectly describe how to design and maintain one, but they just briefly describe the professional driving force that led to designing \nin a systematic way and what issues they aim to solve. They mainly focus on the \"how\" instead of the \"why\". In my thesis, I emphasized on the \"why\", and created a \nlist of factors that contributed to the design crysis, based on research. To achieve this, I often had to go back in time for years, sometimes even decades, and \nlook for sources - which cover practices that counts outdated nowdays - that support my insights.",
      "s-mdwds-prologue-p3": "In the second half of my dissertation, I write about the solutions of the revealed problems besides design systems, and then I elaborate on what does it actually \nmean to work with one.",
      "s-mdwds-prologue-p4": "I decided not to focus primarily on the creation of design systems, because in this approach, the subject has been very much discussed. For me, it is at least as \nexciting to examine what factors played a role in a profession to become what it is today, just like it's current habits and best practices. Thus, its development \nwill not cause us continuous surprises if we know where it came from.",
      "s-mdwds-prologue-p5": "During the time of writing my thesis, I received countless great feebacks, which helped me analyze this subject from different viewpoints. I owe special thanks\nto my university professor, Gusztav Nikazy, who not only provided useful insights, but along that he encouraged me to start writing more objectively, and \ngave me a lot of advices in choosing the Chameleon's front-end technology too. And also to my brother, Balint Toth, who compressed my infinite JavaScript codes\ninto a few lines in record time.",
      "s-mdwds-chapter-1-title": "Modularity: the basis of systems",
      "s-mdwds-chapter-1-p1": "&mdash;Így fogalmazza meg a \"rendszer\" jelentését a Cambridge értelmező szótára. Ez egy elég tág magyarázat, azonban egyértelműen azt sugallja, hogy ahhoz, hogy \negymással együtt tudjanak működni az elemek, speciális módon kell őket megtervezni. Ez a speciális mód pedig a modularitás.",
      "s-mdwds-chapter-1-p2": "A modularitásnak több megközelítése is van, és meghatározása alkalmazási területenként eltérhet. Alapvetően az a lényege, hogy egy adott rendszert úgy terveznek \nmeg, hogy <a target=\"_blank\" class=\"t-article__a\" href=\" https://www.cleverism.com/lexicon/modular-design\">egymáshoz illeszkedő részegységekből felépíthető legyen.</a> Bizonyos \nesetekben különböző elemek helyettesíthetik egymást, így a rendszer több, különböző formát is ölthet. A moduláris tervezést előszeretettel alkalmazzák különböző \niparágakban (mint például bútorgyártás, építőipar, autógyártás, terméktervezés), mert ennek hatására leegyszerűsödnek és gyorsulnak a tervezési folyamatok, \nolcsóbb lesz a gyártás és javítás, valamint könnyebb lesz a csomagolás és szállítás.",
      "s-mdwds-chapter-1-p3": "Erre épül például az IKEA tervezési módszere, aminek lényege, hogy a bútort előregyártott elemekből, szétszerelve csomagolják és árulják, a \nvevőnek kell otthon összeépítenie a hozzá tartozó útmutató szerint. Az IKEA nagyon sok különböző bútort gyárt, viszont ha ezekre nem egészként \ntekintünk, hanem alkotóelemenként, akkor azt figyelhetjük meg, hogy hasonló egységekből állnak: a polcok eltérhetnek hosszúságban, szélességben, \nszínben, de ugyanúgy vannak megmunkálva, hasonlóan vannak előfúrva, és ugyanazokkal az elemekkel kell őket rögzíteni a befoglaló egységhez. \nEz megkönnyíti a tervezést, hiszen sokkal könnyebben létrehozhatók ezek a variációk, mintha minden elem egyedi lenne, valamint a gyártást is, \nmert ugyanazokkal a gépekkel el lehet őket készíteni. A legyártott elemek csomagolása is lényegesen könnyebb így, hogy a lehető legkisebb \negységekre vannak bontva, mivel ilyen módon foglalják a legkevesebb helyet, és lapra szerelve kevésbé sérülékenyek.",
      "s-mdwds-chapter-1-p4": "A példa jól mutatja, hogy hogyan forradalmasította ez a tervezési elv a bútorgyártást, azonban, mint korábban említettem, nem ez az egyetlen \nterület, ahol nagy népszerűségre tett szert. A moduláris tervezésnél érdemes két területet megkülönböztetni: a fizikai- és az elméleti \nfelhasználást.",
      "s-mdwds-chapter-1-subtitle-1": "A modularitás felhasználása fizikai környezetben",
      "s-mdwds-chapter-1-subchapter-1-img1": "A moduláris tervezés lehetővé teszi a sorozatgyártást, így a modelleket nem egymás után, egyedileg készítik el, hanem egyszerre, \npárhuzamosan dolgoznak rajtuk.",
      "s-mdwds-chapter-1-subchapter-1-p1": "Az iparban nem újdonság a moduláris tervezés. Az egyik leglátványosabb eredményt nem is olyan régen az autógyártásban érte el, \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://us5.campaign-archive.com/?u=7e093c5cf4&id=ead8a72012&e=ecb25a3f93\">ahol 20 éve egy új modell piacra \nvezetése a tervezéstől kezdve 5 év volt, viszont a moduláris tervezés bevezetésének köszönhetően ez napjainkra egy évre  csökkent.</a> A \nmodularitásnak sok előnye van, és a különböző iparágak különbözőképpen használják ezt ki. Hídépítésnél például könnyebb az egységeket szállítani, \nmajd ezeket a helyszínen összeszerelni, míg hajógyártásnál nagymértékben javítja a skálázhatóságot, lehetőséget biztosítva sokkal nagyobb méretű \nhajók építésére.",
      "s-mdwds-chapter-1-subtitle-2": "A modularitás felhasználása elméleti környezetben",
      "s-mdwds-chapter-1-subchapter-2-p1": "Nagyon sok szabályrendszer alapul modularitáson. Elég extrém példának tűnhet, de akár a fizetési eszközök is egy moduláris rendszer részét képzik, \nahol különböző címletekből különböző összegeket lehet többféleképpen kirakni. Ha eltekintünk a kényelmi szempontoktól, mint például attól, hogy \nkevesen örülnének annak, ha fizetésüket aprópénzben kapnák, akkor valójában a végeredmény tekintetében mindegy, hogy az milyen címletekből adódik \nössze.",
      "s-mdwds-chapter-1-subchapter-2-p2": "Egy kevésbé elvont alkalmazása a számítástechnikai programkódok felépítése, \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://msdn.microsoft.com/en-us/library/ff921069(v=pandp.20)#why-choose-a-modular-design\">aminél ma már sztenderd lett \na modularitás</a>, ugyanúgy, mint az autógyártásban. Azonban ez nem volt mindig így: az 1960-as évek végén egy válsághelyzet alakult ki, mivel a gépek \nhardver téren rohamos ütemben fejlődtek, <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.fastcodesign.com/90152743/software-design-is-in-crisis\">és ezzel a szoftverek \nnem tudtak lépést tartani.</a> Az 1968-as <a target=\"_blank\" class=\"t-article__a\" href=\"http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF\">NATO \nszoftverfejlesztési konferencián</a> alkalmazták először a \"szoftverválság\" szót, és itt merült fel a megoldás is a problémára, mégpedig az objektumorientált \nprogramozás. Ez egy olyan módszertan, aminek középpontjában a kód újrafelhasználhatósága áll. A megközelítés ennek érdekében a hangsúlyt az eljárások \nfelől az adatszervezés irányába mozdítja.",
      "s-mdwds-chapter-1-subchapter-2-hl1": "\"Döntsd el, mely modulokra van szükséged és oszd fel a programot úgy, hogy az adatokat modulokba helyezed.\"",
      "s-mdwds-chapter-1-subchapter-2-p3": "&mdash;Írja Bjarne Stroustrup könyvében a moduláris programozásról, azonban később látni fogjuk, hogy ez a tanács nem csak a kódírást könnyíti meg.",
      "s-mdwds-chapter-1-subchapter-2-p4": "Az internet elterjedésével egyre nagyobb szerepet kapott a front-end fejlesztés is, ahol szintén megjelent a moduláris kódtervezés. Különböző \nkeretrendszerek (frameworkök) és könyvtárak jöttek létre annak érdekében, hogy segítsék a webfejlesztők munkáját előre megírt, újrafelhasználható \nkódokkal. Ilyen volt például a jQuery, amit a mai napig széles körben használnak, de manapság is jelennek meg JavaScript alapú keretrendszerek, \nmint például a <a target=\"_blank\" class=\"t-article__a\" href=\"https://vuejs.org\">Vue</a> vagy a  <a target=\"_blank\" class=\"t-article__a\" href=\"https://reactjs.org\">React</a>, amik \nmásként használják ki a modularitás tulajdonságait.",
      "s-mdwds-chapter-1-subchapter-2-p5": "Azonban van egy területe a szoftverfejlesztésnek, ahova csak az utóbbi időben kezdte betenni a lábát a moduláris megközelítés, ez pedig a design. \nMarco Suarez, az InVision design systems csapatának vezetője szerint ennek oka hasonló, mint a szoftverválság esetében: a design nem tud lépést \ntartani a front-end fejlesztéssel. <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.designbetter.co/design-systems-handbook/introducing-design-systems\">\nA Design Systems Handbook első fejezetében</a> így nyilatkozik:",
      "s-mdwds-chapter-1-subchapter-2-hl2": "Most, 50 évvel később, hasonló kihívásokkal találjuk szemben magunkat, de ezúttal design téren. A design küszködik azzal, hogy skálázódjon az \napplikációval, amit támogat, mert még mindig egyedi, testreszabott megoldásokat nyújt egyéni problémákra.",
      "s-mdwds-chapter-1-subchapter-2-p6": "A design egyedi problémákra keres megoldást, ami lassítja a tervezési folyamatot. Ennek oka, hogy egyedi problémára egyedi megoldást lehet csak \ntervezni, ami design adósságok felhalmozódásához vezet. Design adósságnak azt nevezzük, amikor egy létező felületbe egy új elem kerül be, amit \nkizárólag abba a környezetbe terveznek bele, figyelmen kívül hagyva az újrafelhasználhatóságot. Erről a következő fejezet végén írok \nrészletesebben.",
      "s-mdwds-chapter-2-title": "Road to the design crisis",
      "s-mdwds-chapter-2-p1": "A nagyobb cégek közül sokan tapasztalták, hogy a design részleg gyarapítása nem oldja meg azt a problémát, amire sokáig erőforráshiányként \ntekintettek: a designerek toborzása által nem lettek gyorsabbak a design folyamatok, azonban nőtt a felületek közti inkonzisztencia. Mindennek \naz az oka, hogy a designerek egy idő után különböző megoldásokat gyártottak az egy forrásra visszavezethető problémákra, ezzel fölösleges \nmunkát végezve, valamint növelve a komplexitást. Az Airbnb <a target=\"_blank\" class=\"t-article__a\" href=\"https://airbnb.design/building-a-visual-language/\">\ndesign blogján említi,</a> hogy felfedezték ezt a szervezeti problémát maguknál, és úgy gondolják, hogy ez nem csak őket érinti, hanem az \negész szoftverfejlesztési ipart:",
      "s-mdwds-chapter-2-hl1": "\"Nyilvánvalóvá vált számunkra, hogy szisztematikusabb megoldásokra van szükségünk, amik vezetik és befolyásolják a kollektív \nerőfeszítéseinket. Míg észleltük ezeket a kihívásokat a vállalaton belül, úgy gondolom, hogy ezek egy nagyobb szoftveripari problémának \na tünetei.\"",
      "s-mdwds-chapter-2-p2": "Valójában nagyon hasonló ez a megállapítás, mint amire Marco Suarez és az InVision is jutott. Másként fogalmazzák meg a problémát, de a \nszisztematikus megközelítés többek között a design adósságok kiszorításában segít.",
      "s-mdwds-chapter-2-p3": "Hogy megértsük, hogy a design folyamatok milyen irányba fejlődnek, fontos, hogy tisztában legyünk azokkal a problémákkal, amikre megoldást \nkeres. Nézzük, hogy mi változott az elmúlt évtizedekben a webes tervezés-, tartalomkezelés-, és tartalomfogyasztás terén, és ez milyen \nhatással volt a designra!",
      "s-mdwds-chapter-2-subtitle-1": "A tartalomközpontúság elterjedése",
      "s-mdwds-chapter-2-subchapter-1-img1": "A Youtube \"Zenék\" oldala, ahol az éppen népszerű klipek jelennek meg. Az oldal készítői csak keretet adnak a tartalom \nközvetítéséhez, ami a felhasználóktól származik.",
      "s-mdwds-chapter-2-subchapter-1-p1": "A HTML közel 30 éve jelent meg azzal a céllal, hogy alternatívaként szolgáljon írott tartalmak online közzétételére, ami mindaddig nyomtatott \nmódon történt. Ez a leírónyelv azóta webes szabvánnyá vált a <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.w3.org/\">W3C</a> támogatásával (a W3C \negy nemzetközi közösség, ami fejlesztéseivel az internet hosszútávú fejlődésén dolgozik).",
      "s-mdwds-chapter-2-subchapter-1-p2": "A digitális, hálózaton keresztül elérhető forma nagyon sok előnyt is biztosít a tárolás mellett: egyrészt egyszerűbben és rugalmasabban \nfrissíthető a tartalom, másrészt pedig könnyebb elérni is, így sokkal nagyobb közönséghez juthat el.",
      "s-mdwds-chapter-2-subchapter-1-p3": "A weboldalak kezdeti célja tehát nem a dinamikus tartalomkezelés és megjelenítés volt, mint amihez napjainkban már hozzászoktunk, hanem \negyszerűen az, hogy statikus oldalakon információkat tároljanak, és ezeket az oldalakat linkek segítségével, hierarchikus felépítés nélkül \nösszekapcsolják, elérhetővé tegyék, így egyfajta virtuális könyvtárat létrehozva.",
      "s-mdwds-chapter-2-subchapter-1-p4": "1996-ot írtunk, mikor Bill Gates közzétett egy cikket a Microsoft oldalán \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://medium.com/@HeathEvans/content-is-king-essay-by-bill-gates-1996-df74552f80d9\">\"Content is King\"</a> \ncímmel. Ez az írás akkoriban jóval megelőzte a korát, hiszen az internet még gyerekcipőben járt, és messze nem számított elsődleges \ninformációforrásnak. Azonban Bill Gates már látta, hogy jó esély van arra, hogy hamarosan azzá váljon.",
      "s-mdwds-chapter-2-subchapter-1-hl1": "\"Ha azzal számolunk, hogy az emberek bekapcsolják a számítógépet a képernyő olvasásához, mélyreható és rendkívül naprakész \ninformációkat kell kapniuk, amelyeket tetszés szerint felfedezhetnek. Hanggal, esetleg videóval is kell rendelkezniük.\"",
      "s-mdwds-chapter-2-subchapter-1-p5": "Ahhoz, hogy egy felhasználó aktívan és rendszeresen használjon egy oldalt, fontos, hogy folyamatosan új és naprakész tartalommal találkozzon. \nOlyannal, amit az offline világ hírforrásai nem tudnak nyújtani.",
      "s-mdwds-chapter-2-subchapter-1-p6": "A programozási nyelvek fejlődése nem csak az asztali alkalmazás fejlesztést és a játékipart lendítették meg, hanem a webfejlesztést is. \nLehetőség nyílt arra, hogy a weboldalak dinamikusan, valós időben frissülő tartalmat jelenítsenek meg a felhasználóknak. Az első webes \nalkalmazás, ami lényegesen túlszárnyalta azt, amit mindaddig a weboldalakról gondoltunk, a Gmail volt. Ez a Google online email kliense, \namit 2004-ben tettek elérhetővé, és a mai napig a legnépszerűbb email kezelő. Amellett, hogy messze ez biztosította a legnagyobb ingyenes \ntárhelyet, innovációja abban rejlett, hogy kihasználta az AJAX webfejlesztési technika előnyét, hogy újratöltés nélkül frissítse az oldal \nbizonyos részeit. Az AJAX ezáltal nagymértékben tudta javítani a felhasználói élményt, a Gmail pedig volt annyira népszerű már a \nmegjelenésekor is, hogy <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.developer.com/design/article.php/3526681\">inspirációt adott a fejlesztőknek,</a> \nhogy a webfejlesztés akkori technológiai hátterével milyen komplexitású felületeket lehet fejleszteni.",
      "s-mdwds-chapter-2-subchapter-1-p7": "Egyre népszerűbbé váltak a tartalom aggregátor oldalak, amik lényegében csak felületet biztosítottak a felhasználóknak tartalommegosztás \ncéljából, majd egy jól megírt algoritmussal a feltöltött tartalmat megjelenítették azoknak a keresőknek, akiknek feltehetően relevánsnak \nbizonyult. Ilyen oldal például a Youtube, a Facebook, a Pinterest, az Amazon vagy a Deviantart, de a legnépszerűbb és az egyik legkorábbi, \na Google kereső is. A tartalmat nem az oldal készítői generálják, hanem a felhasználók, és ez olyan mértékű, és annyira változatos, hogy \nbárki megtalálja azt, ami őt érdekli.",
      "s-mdwds-chapter-2-subchapter-1-p8": "Ahogy az alkalmazásokat egyre többen fejlesztik, több funkcióval egészülnek ki, úgy egyre bonyolultabbá és szerteágazóbbá válnak. A túl \nsok funkció vissza tud ütni, ha a felhasználót összezavarja, mivel így pont az ellenkezőjét éri el, mint ami miatt tervezik: az \nelköteleződést nem növelni, hanem csökkenteni fogja.",
      "s-mdwds-chapter-2-subchapter-1-p9": "Marcin Treder Web Design Book of Trends (<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/ebooks/web-design-book-of-trends-2013-2014/\">@UXPin</a>)\ncímű könyvét a tartalom fontosságának részletezésével kezdi. \"A felhasználók nem a szép design miatt jönnek az oldalra, hanem hogy elérjék céljaikat\" \n- írja, és folytatja azzal, hogy a célhoz a tartalmon keresztül vezet az út. Ez a tartalom pedig folyamatosan változik, frissül, cserélődik - tehát \ndinamikus.",
      "s-mdwds-chapter-2-subchapter-1-p10": "Az az elv, ami design területen egykor működött, hogy a grafikus megtervezi az adott tartalomhoz az oldalt, már nem működik. Gondoljunk \ncsak a Facebook hírfolyamára: itt találkozhatunk írásos posztokkal, élő videókkal, cikkekkel, különböző oldalakról beágyazott megosztásokkal, \nde még ismerőseink interakcióival is, mint például a kedvelés, megosztás vagy hozzászólás. Hogyan is tudnánk megtervezni a különböző oldalakat, \nha mindenkinek másképpen jelennek meg? Még a felhasználói felület sem fog egyezni, ugyanis az is alkalmazkodik az egyén beállításaihoz, \njogosultságaihoz és preferenciáihoz. Megtehetjük, hogy készítünk különböző variációkat, de nem fogjuk tudni lefedni az összes lehetőséget, \nellenben hihetetlen mennyiségű képernyőtervünk lesz, ami nem fogja hitelesen reprezentálni az oldal megjelenését és működését.",
      "s-mdwds-chapter-2-subtitle-2": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-2-img1": "Nem könnyű eldönteni, hogy mekkora vásznat hozzunk létre a weboldal látványterveinek megtervezéséhez.",
      "s-mdwds-chapter-2-subchapter-2-p1": "A technológiák fejlődése által egyre nagyobb teljesítményt sikerült egyre kisebb készülékekbe sűríteni, ráadásul az érintőkijelző megjelenésével \nés elterjedésével a készülékek felületének jelentős része aktív, használható területté vált. Mire azon kaptuk magunkat, hogy felbontásban, \nméretben, képarányban és képmegjelenítési techológiában különböző kijelzők végtelen kombinációjával kerültünk szembe, fel kellett ismernünk, \nhogy a tervezési megközelítéseink messze le vannak maradva attól, hogy ezekre látványterveket tudjunk készíteni. A felhasználó hasonló \nfunkcionalitással és működéssel szeretne találkozni a 27 colos monitorján, a 13’-os ultrabookján és a 4.7’-os telefonján, hogy a feladatait \nkészüléktől függetlenül el tudja végezni.",
      "s-mdwds-chapter-2-subchapter-2-p2": "Most nézzük a problémát tervezési oldalról: a designerben már az első lépésnél, a dokumentum létrehozásánál felmerül a kézenfekvő kérdés: \nmekkora méretű legyen? A CSS jó megoldásokat biztosít kijelzőhöz alkalmazkodó layout tervezésére: ilyen például \n<a target=\"_blank\" class=\"t-article__a\" href=\"http://www.liquidapsive.com/\">az adaptív, a fluid vagy a reszponzív tervezési megközelítés</a>, ami arányokkal \nés képernyőszélességhez kapcsolódó tulajdonságokkal operál, azonban a népszerű tervezőszofverekben egyelőre nincs meg az a dinamika, \nhogy lehetőséget adjanak hasonló tervezésre.",
      "s-mdwds-chapter-2-subtitle-3": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-3-p1": "Az internet megjelenése után a webes front-end fejlesztés (már ha nem erős ez a kifejezés) nagyon egyszerű eszközökkel dolgozott, ezért nem \nvolt kérdéses, hogy hol voltak a határai. Olyan alapvető formázásokat tudott, mint például színek, hátterek, betűméretek és stílusok állítása \n(nem meglepő, hiszen célja hasonló volt, mint például a Wordnek, azzal a különbséggel, hogy a dokumentum célzottan webes feltöltésre készült). \nEkkor még jóideig helytállt a mondás, hogy amit le lehet kódolni HTML-ben és CSS-ben, arra lehetett készíteni tervet Phtosohopban. Azonban, \nahogy egyre bővült a specifikációjuk, majd kiegészítette a képet a JavaScript, ez lassan kezdett megváltozni.\nA JavaScript 1995-ben jelent meg, habár nagyobb népszerűségre csak hosszú küzdelmek után, a 2000-es évek elején tett szert. Ennek okáról hosszas \nérveléseket lehet találni, viszont egy dolog biztosan közrejátszott: 2004 és 2005 között a Google két nagyobb alkalmazásához is használta, a \nMaps-hez és a Gmail-hez.",
      "s-mdwds-chapter-2-subchapter-3-p2": "A front-end technológiák egyre összetettebb, dinamikusan változó látvány megjelenítését tették lehetővé, azonban a design szoftverek azóta is \nstatikusan működnek. Ma már a designnak nem különálló képernyőállapotok látványtervezéséről kellene szólniuk, hanem felhasználói interakción \nalapuló, folyamatos visszacsatolások dinamikus megjelenítéséről. Ez egyrészt szükséges a fejlesztést megelőző felhasználói teszteléshez, \nvalamint magához a fejlesztéshez is, hiszen sokkal nehezebb elmagyarázni például a layout működését, mint megmutatni élő példán. Hasonló a \nhelyzet az áttűnésekkel és az animációkkal is.",
      "s-mdwds-chapter-2-subtitle-4": "A számítástechnikai eszközök rohamos fejlődése",
      "s-mdwds-chapter-2-subchapter-4-img1": "Az Apple 1998-as weboldala. Lehet, hogy mai szemmel design téren lehetne kifinomultabb, de egyértelmű, hogy mik az interaktív elemek rajta.",
      "s-mdwds-chapter-2-subchapter-4-img2": "A web 2.0 design a színes, egyedi grafikai megoldásokról szólt. A UI elemeket sokszor kellett emiatt képként beilleszteni.",
      "s-mdwds-chapter-2-subchapter-4-img3": "A kép jól illusztrálja a különbséget a skeuomorph, a flat és a material között.",
      "s-mdwds-chapter-2-subchapter-4-p1": "Az internet kezdeti éveiben (1995–2000) kevés lehetőség volt az egyediség kibontakoztatására az alacsony sávszélesség és a kezdetleges és \nerősen korlátozott fejlesztési technológiák miatt. Bár ma már megmosolyogjuk a Yahhoo vagy az Apple első weboldalát, kétségtelen, hogy nagyon \nsok fontos konvenció létrejötte ehhez a korszakhoz köthető, mint például a kék színű linkek, vagy a gombok eltérő állapotai.",
      "s-mdwds-chapter-2-subchapter-4-p2": "Ezután, a 2000-es évek eleje körül terjedt el a web 2.0, ami a felhasználói interakción alapuló weboldalakat takarta, és ezzel párhuzamosan \nterjedt el egy új design stílus, amit szintén web 2.0 néven emlegetnek. Ekkor vált igazán népszerű tervezőszoftverré a Photoshop – elég megnézni \nazokat a szép, fényes gombokat, vagy az erős drop shadow- illetve egyéb blending options tulajdonságokkal erősen terhelt grafikai elemeket a \nweboldalakon ebből az időből. Egyre népszerűbbek lettek a nagy képek, és ami igazán fontos, a \"call to action\"-ök – nagy, színes, \nfigyelemfelkeltő gombok, amiket a konverzió javítása érdekében kezdtek el használni (és használnak a mai napig).",
      "s-mdwds-chapter-2-subchapter-4-p3": "Majd szép lassan teret nyert a skeuomorphic design, ami valós tárgyak és felületek stilizált megjelenését állította középpontba. Legnépszerűbb \nképviselője az Apple volt, ami az iOS7-nél szakadt el ettől a stílustól 2013-ban.",
      "s-mdwds-chapter-2-subchapter-4-p4": "Az igazán nagy revolúciót a flat design hozta meg, amit a Windows már 2010-től használt, az Apple az iOS7 megjelenésétől, és rövidesen a \nGoogle is beállt a sorba. Ez a stílus a minimalizmust képviselte, és a letisztult, egyszerű, geometrikus megjelenésről szólt. Akkora hatással \nvolt a design fejlődésére, hogy szakmai sztenderd lett hirtelen, és vállalatok sorra cserélték le az oldalaikat.",
      "s-mdwds-chapter-2-subchapter-4-p5": "A flat megjelenése óta nem történt igazán nagy stílusbeli változás. A mai napig ez az általános trend, azonban sokat fejlődött az elmúlt \névekben. A Google 2014-ben publikálta a <a target=\"_blank\" class=\"t-article__a\" href=\"https://material.io/\">Material Designt</a>, ami nagyon sok tekintetben \nhasonlít a flathez, azonban sokkal egyértelműbben van definiálva, hiszen a Google gondoskodott a részletekbe menő rendszer megtervezéséről. \nA material egy univerzális nyelv <a target=\"_blank\" class=\"t-article__a\" href=\"https://youtu.be/rrT6v5sOwJg?t=6m28s\">(legalábbis Matias Duarte, a Google \nVP designere szerint)</a>, ami folyamatosan fejlődik a korral, ezzel kiküszöbölve az olyan durva, ugrásszerű stílusbeli \nátalakulásokat, mint amik korábban voltak.",
      "s-mdwds-chapter-2-subchapter-4-p6": "Láthatjuk, hogy mennyire változatos és egymástól eltérő stílusok váltották egymást a webdesign eddigi rövid történelme alatt, mire elérkeztünk \negy olyan állapothoz, ahol azt mondhatjuk, hogy a lényeges tulajdonságokban nem történik egyik napról a másikra radikális változás, inkább \ncsak folyamatos, irányított fejlődés. Ennek az az oka, hogy elsősorban a digitális termékeket fejlesztő cégek, akiknek fontos, hogy naprakész \nwebes megjelenésük legyen, rájöttek, hogy túl nagy erőforrást igényel egyben lecserélni a teljes megjelenésüket, ráadásul erre az erőforrásra \ncsak adott időközönként, a designváltás alatt van szükség. Valamint van egy másik probléma, ami talán ennél is fontosabb, mégpedig az, hogy \nfelhasználói szempontból nagyon frusztráló egy megszokott szolgáltatást teljesen új köntösben látni, és újrakezdeni a tanulási folyamatot a \nteljes felületen.",
      "s-mdwds-chapter-2-subchapter-4-p7": "Ezért is volt igazán fontos annak a mentalitásnak a kialakítása, hogy a designt egy folyamatosan fejlődő és változó rendszerként kell kezelni, \namiben a változások nem lehetnek önkényesek és szubjektívek. Ez nagyon fontos, hiszen így érvényesül igazán a felhasználóközpontúság, mivel \nvisszajelzésekre támaszkodva alakítjuk a felületeket.",
      "s-mdwds-chapter-2-subtitle-5": "A webdesign szakma útkeresése",
      "s-mdwds-chapter-2-subchapter-5-p1": "A webdesign gyökerei a képzőművészetben keresendők, azonban egy olyan területről van szó, ami alig 20 éve fejlődött ki (legfeljebb a 2000-es \névektől van értelme szakmaként tekinteni a webdesignra), és igazán nagy hangsúlyt csak az utóbbi években szerzett. Ahogyan próbál \nalkalmazkodni egyszerre a felhasználók igényeihez és a fejlődő technológiai háttérhez, nem meglepő, hogy az állása ennyire bizonytalan. \nRáadásul a rendeltetése merőben eltér attól, amit a képzőművészetben megszoktunk - a képeket, festményeket, szobrokat vizuálisan értelmezzük, \nelső ránézésre kialakul bennünk egy érzés a látott mű kapcsán, azonban a weboldalak egyszerre építenek vizuális és szöveges tartalomra, amit \naz is nehezít, hogy mindez egy interaktív kezelőfelületen keresztül érhető el. A felhasználónak rá kell jönnie tehát, hogy bizonyos funkciókat \nhol tud elérni az oldalon, amik alapállapotban lehet, hogy nem is látszódnak (mint például egy dropdown menü elemei, amik csak kattintás után \njelennek meg).",
      "s-mdwds-chapter-2-subchapter-5-p2": "Rune Madsen, a Programming Design Systems szerzője szerint a probléma az, hogy \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://programmingdesignsystems.com/introduction/\">sok helyen a mai napig rossz szemlélet uralkodik a design \noktatásban</a>, hiszen a legtöbb művészeti képzésben nem tanítanak rendszerszintű tervezést, csupán kreatív ötletek létrehozását. A designer \nszigorúan csak statikus állapotokat tervez, amit a vízesésmodellel lehet integrálni a szoftverfejlesztésbe, mivel erős határ képződik látvány \n(design) és működés (programkód) között.",
      "s-mdwds-chapter-2-subchapter-5-p3": "A vízesés-modell egy lineáris, szekvenciális tervezési megközelítés, ami a szoftverfejlesztésben rugalmatlan, az agilishoz képest sokkal \nkevésbé flexibilis folyamat. Míg az ipar számos területén működik, addig az informatikában kevésbé, mivel a digitális világban rendkívül \ngyors az iteráció, és az egyes területek el tudnak kezdeni dolgozni párhuzamosan, sőt, a kérdések tisztázása érdekében nagyon is érdemes \nnekik.",
      "s-mdwds-chapter-2-subchapter-5-p4": "Napjainkra a webdesign két irányba ágazott el: az egyik a felhasználói felület vizuális megjelenésével foglalkozik, másik pedig a felhasználói \nélmény megtervezésével. Kisebb termékeknél összemosódhat ez a kettő (ők a product designerek), azonban nagyobb felületeknél külön kellett \nválasztani őket, mert teljesen más munkafolyamatokról van szó.",
      "s-mdwds-chapter-2-subchapter-5-p5": "A UI designerek, akik a felületeket tervezik, valójában a modern tervezési folyamatban nem is felületeket terveznek, hanem komponenseket, \nmint a design rendszert fenntartó csapat tagjai. Feladatkörük sokkal több annál, hogy \"szép dolgokat rajzolnak\", mint ahogy sokan írnák le \na munkájukat. Reszponzív, skálázható és újrafelhasználható komponenskönyvtárat készítenek.",
      "s-mdwds-chapter-2-subchapter-5-p6": "A UX designerek pedig amellett, hogy elemzések és kutatások eredményei alapján felhasználói utakat terveznek, a végleges prototípust is \nösszeállítják, a végleges UI elemekkel. Tehát a UX designer végső célja nem az, hogy drótvázat készítsen, még ha a tervezési folyamatának \nrésze is, hanem az, hogy kész terveket (prototípusokat) adjon tovább fejlesztésre.",
      "s-mdwds-chapter-2-subchapter-5-p7": "Ez a két út csak a két legalapvetőbb irány, ez nagyobb vállalatoknál kiegészül interakciótervezéssel (IxD) és információs architektúratervezéssel \n(IA). Kisebbeknél beépülnek a UX illetve UI szerepkörbe. Sok évnek kellett eltelnie, mire kialakultak ezek a - külső szemmel talán értelmetlen \n&mdash; design specializációk abból, hogy egykor volt a webdesigner, aki a grafikákat készítette.\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://uxplanet.org/ux-vs-ui-vs-ia-vs-ixd-4-confusing-digital-design-terms-defined-1ae2f82418c7\">Ezekről itt \nolvashatsz bővvebben.</a>",
      "s-mdwds-chapter-2-subtitle-6": "Egyre több designernek kell közösen dolgoznia",
      "s-mdwds-chapter-2-subchapter-6-p1": "Korábban egy példában már érintőlegesen említettem az Airbnb tapasztalatát azzal kapcsolatban, hogy a design részleg bővítése nem érte el a \nkívánt eredményt a folyamatok hatásosabbá tétele érdekében, most pedig elérkeztünk oda, hogy megvizsgáljuk ennek lehetséges okait.",
      "s-mdwds-chapter-2-subchapter-6-p2": "Először is, mindegy, hogy hány embernek kell közösen terveznie, nem hanyagolható el az emberi tényező: mindenki máshogy gondolkodik, máshogy \nközelíti meg a szembejövő problémákat, így egységes nyelvrendszer hiányában eltérő választ fognak adni rá.",
      "s-mdwds-chapter-2-subchapter-6-p3": "Manapság egyre jobban előtérbe kerül a kollaboráció elősegítése a tervezőprogramokban, azonban ez csak az utóbbi évek trendje. Túl későn \népültek be a felhőszolgáltatások ezekbe az alkalmazásokba, és még mindig érződik, hogy nem annyira stabil és kifinomult a funkcionalitásuk. \nCélszoftverek helyett még mindig gyakran arra szorulunk, hogy általános felhőszolgáltatásokat alkalmazzunk, mint például a Google Drive. Ez \nalapvetően nem akkora probléma, azonban sok előnye lehetne, ha a megosztás a tervezőszoftveren belül történne (például megbízhatóság, gyorsaság, \nverziókövetés tekitetében). Arról nem is beszélve, hogy gyorsan el tud fajulni egy Drive fájlstruktúra, ahogy egyre többen használják különböző \ncélokra egy cégen belül, így egyre több nehézséget okoz a közös munka, és nő a hibázás esélye is.",
      "s-mdwds-chapter-2-subtitle-7": "Felhalmozódik a design adósság",
      "s-mdwds-chapter-2-subchapter-7-img1": "A design adósságot a piros nyolcszög ábrázolja, ami semmilyen módon nem kapcsolódik a felület többi egységéhez, így megbontja a rendet és a \nvizuális hierarchiát.",
      "s-mdwds-chapter-2-subchapter-7-p1": "Design adósság <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.invisionapp.com/blog/tackle-design-debt/\">akkor jön létre, amikor egy új, egyedi \nelem kerül az oldalra, amivel eredetileg nem számoltak tervezésnél.</a> Mivel egy adott \nproblémának a megoldására tervezték, nem lehet más felületeken újra felhasználni, így általában nem készül belőle sem design (mint például \nSketch szimbólum), sem pedig front-end komponens. Amellett, hogy megbontja a design rendjét, a front-end kód komplexitását is növeli, hiszen \nezzel gyarapodik az egyedi osztályok és a hozzájuk tartozó paraméterek mennyisége. A design adósság leginkább nagyobb felületeknél jelent \nproblémát, ahol bővíti a design elemek listáját, így nehezítve és inkonzisztensé téve a design folyamatokat, valamint ahol masszív CSS \nkódokkal operál az oldal, hiszen növeli a kódok hosszúságát, ezzel nehezítve az átláthatóságot és növeli a fájlok méretét, ezzel lassítva \na betöltési sebességet.",
      "s-mdwds-chapter-2-subchapter-7-p2": "Egy másik gyakori kiváltó oka pedig az, amikor a felületi hierarchia kialakításának hajtóereje nem felhasználói élményen alapul, hanem üzleti \nérdekeken. \"Legyen figyelemfelkeltőbb\" &mdash; ezután a mondat után általában elkerülhetetlen az adósságmentes tervezés, és sajnos többször hallani,\nmint kellene.",
      "s-mdwds-chapter-2-subchapter-7-p3": "A harmadik, legsúlyosabb probléma pedig a forrásfájlok hiánya. Ahogy jelennek meg és cserélődnek sorra az újabb és újabb tervezőszoftverek, \nvándorolnak a designer kollégák, a fejlesztésnek pedig folyamatos ütemben kell haladnia, nem meglepő, hogy időnként elvesznek a forrásfájlok \n(elvégre ki akarna valaki másnak a strukturálatlan, mappaszerkezet és rétegnév nélküli forrásfájljaiból dolgozni?). Ilyenkor a legegyszerűbb \nmegoldás képernyőképeket készíteni, és erre dolgozni, hiszen sokkal több idő újra megrajzolni egy felületet, mint belemaszatolni az aktuális \nállapotba. Ilyenkor az a baj, hogy egy amúgy is régi terv kerül módosításra, amit még tovább kell zsúfolni, és nincs lehetőség arra, hogy \nkisebb módosításokkal rendbetegyük a felületet, mint például a negatív terek újraállításával, vagy a betűk növelésével. Így sokkal nehezebb \nkomponensekben is gondolkodni, mivel nem tudjuk, hogy melyik elem hol jelenik meg a felületen, és hogyan alkalmazkodik a környezetéhez, tehát \na megoldásunk nem lesz sem reszponzív, sem pedig skálázható (ezekről bővebben a 3. fejezetben). A felhasználói út szimulálása és a tesztelés \nis nehéz így, hiszen mindig csak a módosításokról lesznek tervek, amik a teljes felhasználói utat nem fedik le.",
      "s-mdwds-chapter-2-subtitle-8": "A design szoftverek lemaradtak a fejlődésben",
      "s-mdwds-chapter-2-subchapter-8-p1": "Az általános design megközelítés sokáig egy helyben toporgott: ugyanazzal a technológiai háttérrel próbálta megoldani a szoftverfejlesztés \náltal felvetett problémákat, mint amikor széleskörben elterjedtek a pixelgrafikus tervezőszoftverek, mint például a Photoshop.",
      "s-mdwds-chapter-2-subchapter-8-p2": "Évtizedek teltek el, és még a mai napig ez az egyik legnépszerűbb tervezőszoftver webes környezetben is, annak ellenére, hogy elsősorban \ntervezőgrafikára hozták létre, és nagyon nehezen illeszthető modern szoftverfejlesztési környezetbe. Habár széles palettájának köszönhetően \na digitális grafika nagyon sok területén alkalmazható, és weboldalak látványterveit is viszonylag könnyen meg lehet benne tervezni, azonban \na moduláris tervezésre irányuló törekvéseknek gátat szab, hogy az elemeket csak egyedi objektumokként engedi kezelni, így nem ad lehetőséget \nuniverzális megoldások tervezésére mesterobjektumok létrehozásán keresztül. Ezért, ha frissíteni szeretnénk egy komponenst, azt az összes \nlétező helyen meg kell tennünk.",
      "s-mdwds-chapter-2-subchapter-8-p3": "A moduláris tervezés középpontjában az előre meghatározott megoldások állnak, azonban csak a közelmúltban \nkezdtek el olyan szoftvereket készíteni, amiknek erőssége nem a széleskörű grafikai palettában rejlik, hanem a rendszerszintű megoldások \nminél könnyebb definiálásában. Ilyen például a Sketch, a Gravit és az InVision Studio.",
      "s-mdwds-chapter-3-title": "Searching for solution in the design crisis",
      "s-mdwds-chapter-3-p1": "A nagyobb vállalatok rövidesen rájöttek, hogy a design fenntarthatósága a cél mind a felhasználó, mind pedig a cég szempontjából. A felhasználó \nnem akar folyamatosan új felületekkel megismerkedni, a cégnek pedig olcsóbb, gyorsabb és hatékonyabb a tervezés és fejlesztés, ha a problémák \nmegoldását kis lépésekben szállítja a felhasználónak. Nézzük, hogy milyen megoldások segítik elő a design fenntarthatóságát napjainkban!",
      "s-mdwds-chapter-3-subtitle-1": "Atom alapú design rendszer",
      "s-mdwds-chapter-3-subchapter-1-img1": "A design rendszerek komponens alapú megközelítésében előre definiált elemekből tudunk építkezni, amiknek egyedi paramétereit felülírhatjuk \n(mint például a szövegmezőben lévő kitöltő szöveget).",
      "s-mdwds-chapter-3-subchapter-1-img2": "Brad Frost így illusztrálja az atom alapú megközelítés folyamatát.",
      "s-mdwds-chapter-3-subchapter-1-img3": "A Chameleon design rendszerben így néz ki a cikkekhez tartozó Sketch template. Csak fel kell tölteni képekkel és tartalommal az előre definiált \nkomponenseket.",
      "s-mdwds-chapter-3-subchapter-1-p1": "A design rendszerek megjelenéséig a tervezés általános menete az volt, hogy a designerek megtervezték az egyik legdominánsabb oldalt &mdash;a \nfőoldalt, vagy profiloldalt, majd ennek mintájára képezték le az összes többit. Logikusnak tűnik a megközelítés, mivel feltételezhető, hogy \nazok a stílusok, amik harmóniában vannak mondjuk a főoldalon, azok az egyéb aloldalakon is jól mutatnak. Azonban ebben a megközelítésben nem \nalakul ki egy egységes nyelvrendszer a teljes oldalra nézve, amiben olyan elemek is szerepet kapnak, amik a főoldalon mondjuk nincsenek jelen. \nGondoljunk egy egyszerű komponensre, a lapozóra: a főoldalon ritkán találkozunk több oldalra osztott listával, azonban egy nagyobb felületnél \negészen biztos, hogy egy ponton szükség lesz rá. Feltehetően nem is csak egy helyen. És benne van a pakliban, hogy nem ugyanaz a designer \nfogja tervezni az összes felületet, ahol kelleni fog - így előre megtervezett komponens hiányában két különböző stílusú lapozó is létrejön. \nEz pedig az egységes megjelenés ellen játszik, és design adósságot von maga után.",
      "s-mdwds-chapter-3-subchapter-1-p2": "Egy másik jelentős probléma azzal, hogy oldalakban gondolkodunk, hogy a reszponzivitás háttérbe szorul. Először elkészül az asztali változat, \nmajd utána a tablet, végül pedig a mobil - a lefejlesztett felület több helyen is törni fog, hiszen csak a fontosabb kijelzőméretekre \nkészítettünk oldaltervet, és azzal nem foglalkoztunk, hogy közöttük hogyan viselkedik majd az oldal.",
      "s-mdwds-chapter-3-subchapter-1-p3": "A design rendszerek ezzel szemben komponensalapú megközelítést használnak, amit Brad Frost atomic designnak nevezett el. Habár előtte is \nterveztek hasonlóan, ő volt az első, aki összefoglalta ennek a rendszernek a megfelelő előkészületeit, kialakítását, alkalmazását és \nfenntartását. Az atom alapú tervezés lényege, hogy hasonlóan, mint ahogy a bútorok vagy az autók, egy weboldal arculata is felbontható \nismétlődő, újra felhasználható elemekre. Így gyakorlatilag még azelőtt meg tudjuk tervezni a design alapját, hogy tudnánk a pontos \noldalstruktúrát és hierarchiát. Még tervezés előtt összegyűjthetjük, hogy mik azok az elemek, ami nélkül nem lehet weboldalt tervezni, \nés ezt szükség szerint folyamatosan frissíthetjük újabb és újabb elemekkel.",
      "s-mdwds-chapter-3-subchapter-1-p4": "Brad Frost részletesen taglalja az atom alapú tervezés menetét, ami a komponensek létrehozásával kezdődik. Természetesen célja a minél \nmagasabb szintű modularitás, tehát a tervezés a legkisebb egységektől indul, amiket atomoknak nevez. Ezeket kombinálva (mondjuk egy \nbeviteli mezőt gombbal párosítva) molekulákat hozhatunk létre, molekulákból és atomokból pedig organizmusokat, mint mondjuk fejléc vagy \nlábléc (a fejléc például áll logóból, keresőből, linkekből, stb. - ezek az atomok és molekulák). Mindezek kombinálásával pedig templateket \nkapunk, vagyis tartalom nélküli, különböző variációjú oldalstruktúrákat felhasználói kezelőfelülettel. Ez is az egységesítés miatt fontos, \nugyanis ha előre definiálunk lehetséges oldalstruktúrákat, akkor egy új aloldal tervezésénél ezeket elővehetjük, és ezáltal minimálisra \ntudjuk szorítani az eltérő elrendezésű oldalvariációk számát, így időt, energiát és komplexitást takarítva meg mind design, mind pedig \nfejlesztési oldalról.",
      "s-mdwds-chapter-3-subchapter-1-p5": "Egy jól kialakított rendszer jelentősen meggyorsítja a munkát, hiszen egy felületnek nagyon sok ismétlődő eleme van, amire megéri komponenst \nkészíteni. Így szinte teljesen különválasztható a UI tervezése a felületi tervezéstől, ami azért jó, mert így nagyobb hangsúlyt kaphat a \nuser flow és a layouttervezés.",
      "s-mdwds-chapter-3-subchapter-1-p6": "Egy design rendszer segít a fehér papír effektus elkerülésében is: számos elemet el tudunk helyezni a tervezés kezdetén az üres vásznon \nkülönösebb gondolkodás nélkül, mint például a fejlécet és a láblécet. Máris megvan az oldal kerete, ráadásul ezek jó esetben már reszponzívan \nműködnek, szóval jó támpontot adnak a további tervezéshez.",
      "s-mdwds-chapter-3-subchapter-1-p7": "Azonban itt fontos megjegyezni, hogy a design rendszer nem merül ki egy atom alapú komponensgyűjteményben. Brad Frost \n<a target=\"_blank\" class=\"t-article__a\" href=\"http://atomicdesign.bradfrost.com/table-of-contents/\">Atomic Designja</a> nem csupán egy bottom-up tervezési \nmodell, hanem egy modern terméktervezési megközelítés, ami a design folyamatok mellett számításba veszi az implementációt és a \nszoftverfejlesztési- és menedzsment folyamatokban való közös együttműködést.",
      "s-mdwds-chapter-3-subtitle-2": "A skálázható tervezés előtérbe helyezése",
      "s-mdwds-chapter-3-subchapter-2-img1": "Skálázható megoldás egy admin felületen. Habár elég nagy fejlesztői erőforrást igényelhet egy ilyen működés elkészítése, de cserébe hosszútávú, \nigényes megoldást nyújt.",
      "s-mdwds-chapter-3-subchapter-2-p1": "Gyakori probléma új felület tervezésénél, hogy a brief tartalmaz egy leírást arról, hogy minek kell helyet kapnia az oldalon, azonban arról \nnem esik szó, hogy ez a jövőben hogyan módosulhat. Hosszútávon például problémát okozhat, ha egy menü tervezésénél nem vesszük figyelembe, \nhogy idővel további elemekkel bővülhet. Ilyenkor merülhet fel megoldásként a betűméret vagy a negatív terek csökkentése, ami a legolcsóbb \nmegoldásnak tűnhet.",
      "s-mdwds-chapter-3-subchapter-2-p2": "Azonban amellett, hogy esztétikailag nyilvánvalóan rossz megközelítés, használhatósági gondokat is okozhat egy ilyen \"javítás\". Éppen ezért \nfontos, hogy ne csak az aktuális tartalmat tartsuk szem előtt, hanem számoljunk azzal is, hogy ez hogyan bővülhet a későbbiekben.",
      "s-mdwds-chapter-3-subchapter-2-p3": "A skálázhatóság alapja, hogy olyan megoldásokat kell tervezni, ami sokkal több elem megjelenítését teszi lehetővé, mint amivel számolunk (vagy \namit lehetségesnek tartunk). Bizonyos esetekben ez akár végtelen is lehet - gondoljunk csak a Facebook hírfolyamára. Amikor az oldal aljára \nérünk, újabb elemeket tölt be, így a végtelenségig (vagyis addig, amíg engedi a tartalom, illetve a böngésző kapacitása) nézhetjük a \nfeltöltéseket.",
      "s-mdwds-chapter-3-subchapter-2-p4": "Mint korábban írtam, a terv készítésekor pontosan tudjuk, hogy minek kell helyet kapnia az oldalon, így a tervezési időt kezdetben növelni fogja, \nhogy jelenleg nem létező állapotokat is számításba veszünk munkánk során. Ennek az irányelvnek a betartása tehát hosszútávon térül meg, ahogy \negyre több funkcióval bővül a termék. Ilyenkor ahelyett, hogy megpróbáljuk beleerőszakolni a plusz elemeket a meglévő felületi egységekbe, vagy \nmegpróbáljuk kijavítani és részben (vagy teljesen) újratervezni és újrakódolni a komponenst, egyszerűen kibővíthetjük, ugyanis előrelátóan \ngondoltunk erre az eshetőségre.",
      "s-mdwds-chapter-3-subtitle-3": "A reszponzivitás előtérbe helyezése",
      "s-mdwds-chapter-3-subchapter-3-img1": "Mouláris, skálázható, reszponzív megközelítés a fejléctervre a Chameleonban",
      "s-mdwds-chapter-3-subchapter-3-p1": "Habár már a 2000-es évek közepe táján jelentek meg mobileszközök, amik alkalmasak voltak weboldalak megjelenítésére, a reszponzivitás igazán \nnagy figyelmet csak 2012 körül kapott. Ekkor váltak ugyanis széleskörben elérhetővé az okostelefonok és tabletek. Egészen addig, mivel az \nemberek többsége asztali gépről böngészett, külön oldalként kezelték a  mobil változatát egy felületnek, így teljesen más kód szolgálta ki, \nmint az asztali weboldalt. Ez a gyakrolatban úgy néz ki, hogy amikor a felhasználó felmegy az oldalra mobilról, egy átirányítás történik a \n\"domain.com\"-ról az \"m.domain.com\"-ra.",
      "s-mdwds-chapter-3-subchapter-3-p2": "A reszponzív tervezés ezzel szemben úgy működik, hogy a weboldal CSS kódja úgynevezett \"media-query\"-k segítségével megvizsgálja a készülék \nszélességét, és a stílusokat ez alapján rendeli a HTML elemekhez, így lehetővé téve dinamikus layout létrehozását. Az előző példával szemben \nitt ugyanaz a kód szolgálja ki az összes nézetet, csak a kódnak bizonyos elemei felülíródnak kijelzőmérettől függően. Habár még mindig vannak \n\"M-dot\" weboldalak, <a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/blog/m-dot-sites-are-dying-long-live-responsive-design/\">a \nszámuk drasztikusan csökkent,</a> hiszen a reszponzív tervezéssel ellentétben egy layoutra épülnek, így a mobil és az asztali nézet közti \nlehetőségekre továbbra sem lesz megfelelően optimalizálva a weboldal.",
      "s-mdwds-chapter-3-subchapter-3-p3": "Optimális esetben a komponensek tervezése elkülönül a layouttevezéstől, mivel az a cél, hogy a komponensek minél függetlenebbek legyenek a \nkörnyezettől. Mikor az oldalstruktúrára készítünk drótvázakat, kézenfekvőnek tűnik a reszponzív viselkedés számításba vétele, azonban a \nkomponenseknél már gyakran megfeledkezünk arról, hogy mindenekelőtt azt találjuk ki, hogy melyik kijelzőn mit- és hogyan szeretnénk mutatni. \nEhelyett elkészítjük az asztali változatot, majd utána megpróbáljuk összezsúfolni a varázslatos 320 pixeles szélességig (a ma népszerű \nokostelefonok alsó határa), és hogy reszponzívnak mondható legyen, beiktatunk még egy 600-800 pixeles tablet nézetet.",
      "s-mdwds-chapter-3-subchapter-3-p4": "A komponens alapú gondolkodás ezzel szemben segít bennünket abban, hogy\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://adamsilver.io/articles/stop-using-device-breakpoints/\">reszponzív egységek összességeként tekintsünk \na felületünkre,</a> hiszen egy elem csak akkor kerülhet be a közös könyvtárba, ha meg van tervezve, hogy hogyan fog különböző kijelzőméretekhez \nalkalmazkodni. Valamint segít abban is, hogy figyelmen kívül hagyjuk a népszerű kijelzőméreteket, és elszakadjunk az eszköz alapú megközelítéstől, \nés tartalomhoz igazítva állapítsuk meg a törésponjait a komponenseknek. Míg régebben még többé-kevésbé működött ez a megközelítés, ma már \nannyira különböző a kijelzők felbontása, hogy nem lehet kiválasztani a legnépszerűbbeket és kizárólag azokra tervezni, mert csak a töredékét \nfogják lefedni annak a nagy halmaznak, amilyen eszközökről a látogatók nézni fogják az oldalunkat.",
      "s-mdwds-chapter-3-subchapter-3-p5": "A lorant.design fejlécét ennek megfelelően terveztem. Először elkészítettem a Sketch szimbólumot különböző töréspontokhoz, amiket a tartalomhoz \nigazítottam, így minimálisra sikerült szorítanom a számukat, és ezzel elértem azt is, hogy mindegy, milyen kijelzőn jelenik meg, biztosan megflelő \nfelhasználói élményt fog nyújtani. Ha ki kellene egészíteni a fejlécet további menüpontokkal, akkor sem kellene sokat változtatnom rajta, csak \nannak a töréspontnak a minimum szélességét nagyobbra vennem, ami azért felelős, hogy a menü elemeit a lenyíló dobozba áthelyezze. Ezen az \negyszerű példán jól látható, hogy mit jelent a skálázhatóság és a reszponzív tervezés.",
      "s-mdwds-chapter-3-subtitle-4": "Design folyamatok integrációja az agilis szoftverfejlesztésbe",
      "s-mdwds-chapter-3-subchapter-4-p1": "A fentebbi pontok segítenek minket abban, hogy korszerű megközelítéssel álljunk munkának, hiszen a tervezés elsőszámú prioritásának a \nmodularitást vesszük - az elkészülő komponensek reszponzivitásuknak és skálázhatóságuknak köszönhetően könnyen beépíthetők lesznek különböző \nadottságú felületekbe. Az pedig a fejlesztőknek is kedvez, hogy feltehetően nem kell folyamatosan drasztikus módosításokat végezni a lekódolt \nkomponenseken, mert hosszútávra készülnek. Szóval, már tudjuk, hogy hogyan kell tervezni, a kérdés már csak az, hogy mit? A product designerek \nfeladata az üzleti igények átültetése működőképes termékbe, amit a felhasználók elkötelezetten fognak használni.",
      "s-mdwds-chapter-3-subchapter-4-p2": "Ahhoz, hogy megértsük, hogy modern környezetben milyen módon történik a haladás, vissza kell mennünk az időben egészen 2001-ig. Ekkor ugyanis \negy fejlesztőkből álló csoport összegyűlt, hogy megoldást keressen a szervezeteknél általánosan fellépő, elsősorban szervezési problémákra. \nA megoldás az <a target=\"_blank\" class=\"t-article__a\" href=\"http://agilemanifesto.org/iso/hu/manifesto.html\">Agilis kiáltvány</a> lett, aminek célja, hogy \nhatékonyabb és gyorsabb legyen a tervezés, és több idő maradjon a tényleges fejlesztésre, ami valós értékkel bír a felhasználók számára. \nA kiáltvány 12 elvre és 5 értékre épül, amik többnyire elég szabadon alkalmazhatóak, nem nyújtanak konkrét megoldásokat a szoftverfejlesztés \nmenetére, csupán támpontokat adnak, hogy a folyamatok minél gördülékenyebben történjenek.",
      "s-mdwds-chapter-3-subchapter-4-p3": "Azért is alkalmazzák előszeretettel, mert a szabályok elősegítik a gyors reagálást a változásokra, ezzel rugalmassá és piacközpontúvá téve \na tervezést. A kiáltvány egyik pontja például arról szól, hogy az agilis szoftverfejlesztés előnyben részesíti a működő szoftvert az átfogó \ndokumentációval szemben. Ennek oka, hogy időigényes a dokumentációk megírása és folyamatos frissítése, és az a munka, amit ezzel töltenénk, \nnem viszi közelebb közvetlenül a csapatot a szoftver minél gyorsabb elkészítéséhez. A kiáltvány pontjai érthetőek és jogosak, azonban \nelsősorban fejlesztésről szólnak, így designerként maradtak bennem kérdések. Attól lesz agilis a design folyamat, hogy a designer a termékfejlesztő \ncsapattal együtt dolgozik? Hogy fejlesztői meetingekre jár?",
      "s-mdwds-chapter-3-subchapter-4-p4": "Paul Adams az Intercomtól azt mondja, hogy a termék szállítása a felhasználóknak náluk csak a kezdete a termék életének. Megpróbálják a lehető \nleggyorsabban megtenni ezt, hogy minél előbb visszajelzéseket kapjanak azzal kapcsolatban, hogy a termékük valóban segíti a felhasználót. Azt \nis hozzáteszi, hogy az MVP-t (legkisebb életképes terméket) a cégek gyakran teljesen félreértelmezik, és összedobnak valamit, amiről azt sem \ntudják, hogy kelleni fog-e egyáltalán valakinek. Ezzel szemben, náluk egy prototípussal letesztelt termékként tekintenek rá, ami funkcionalitásban \nmég fejlődhet felhasználói igényektől függően, de létező problémákra nyújt egyszerű és átgondolt megoldást.",
      "s-mdwds-chapter-3-subchapter-4-p5": "A prototípussal való tesztelés az első lépés a folyamatos iteráció felé. Addig, amíg nincs mit tesztelni, és amíg nincsenek visszajelzések, \nnincs min módosítani. Nem elég tudni, hogy rosszul teljesít a termék, azt is tudni kell, hogy miért. És mivel a prototípus sokkal \nköltséghatékonyabb a fejlesztésnél, ezért nagy felelőssége van a design folyamatoknak abban, hogy megfelelő irányba tereljék a termék \nfejlődését. Ekkor értettem meg, hogy az agilitás nem abban rejlik, hogy a designer a fejlesztőkkel ül, vagy hogy ott van a meetingeken, \nhanem abban, hogy a csapattól megkapja azt a támogatást, ami szükséges ahhoz, hogy validálni tudja a kitalált fejlesztési irányokat, és \nmegoldási javaslatokat tudjon készíteni rájuk.",
      "s-mdwds-chapter-3-subchapter-4-p6": "Ebben segíthet például a folyamatos kapcsolattartás a UI fejlesztőkkel és a termékmenedzserrel. Saját tapasztalat volt, mikor átkerülve a \nfejlesztő csapathoz, rövidesen azt figyeltem meg, hogy a rendszeres egyeztetések hatására nem kész megoldásokat kapok, amiket elvárják tőlem, \nhogy megvalósítsak, hanem problémákat, amikre a megoldást is nekem kell megtalálni. Ez egy sokkal iteratívabb és rugalmasabb folyamathoz \nvezetett, ami lehetővé tette, hogy több megoldási javaslatot nyújtsak, amiből aszerint került kiválasztásra a végleges irány, hogy \negyensúlyban legyen az üzleti érték, a felhasználói igény és a fejlesztői erőforrás. Az iteratív megközelítés azért kifejezetten fontos, \nmert elsőre nagyon nehéz megfelelően, hibátlanul megtervezni és kivitelezni egy terméket vagy funkciót. Sőt, általában mindig lesz valami, \namin lehet még javítani, és ezeket a pontokat mérésekkel meg lehet állapítani.",
      "s-mdwds-chapter-3-subchapter-4-p7": "Azonban, mint említettem, a designereknek nem feltétlenül kell a fejlesztési csapattal együtt dolgozniuk ahhoz, hogy agilisan tudjanak \nműködni. Van egy centralizált megoldás is, ahol a designerek közösen ülnek és ötletelnek. Természetesen ennek is számtalan előnye lehet, \nmint például az, hogy sokkal több lehetőségük van visszajelzést adniuk egymás munkájára, hiszen jobban rálátnak, mintha egymástól külön \ndolgoznának. Ugyanez miatt könnyebb az egységes tervezés is, valamint az információ gyorsabb áramlása miatt gyorsan kijön, ha hasonló \nmegoldást kell két különböző felületre tervezni, ilyenkor megspórolva az extra munkát és az inkonzisztencia kockázatát.",
      "s-mdwds-chapter-3-subchapter-4-p8": "A sok előny ellenére mégis ritkán működik jól a centralizált modell. Lehet, hogy a tervek jobb minőségűek, a prototípusok kifinomultabbak, \na megoldások igényesebbek, azonban mit sem ér egy szép termék, ha nincs rá szükség. Mit sem ér egy szép prototípus, ha a lefejlesztett \ntermék nem úgy néz ki. Egy design rendszer megoldja azokat a problémákat, amik felmerülhetnek abban az esetben, amikor a designerek nem \nközös csapatban dolgoznak.",
      "s-mdwds-chapter-3-subchapter-4-p9": "Azonban van egy eset, amikor elkerülhetetlen a centralizált megközelítés, ez pedig egy teljesen új termék kitalálásának az esete. Ilyenkor \na tervezés ideális esetben <a target=\"_blank\" class=\"t-article__a\" href=\"http://www.gv.com/sprint/\">design sprinttel</a> kezdődik. A design sprint egy 5 \nnapos ötletelés és tervezés, ami egy működő prototípus tesztelésével zárul. Alapja a lean és a design thinking mószertana, a sprint lényegében \nennek a gyakorlati kivitelezése. Hosszúsága úgy van megtervezve, hogy egy teljes iteráció menjen alatta végbe: ez az ötleteléssel kezdődik az \nelső napon, ami üzleti vezetés és fejlesztés képviseletében történik. A következő két nap szól a tényleges tervezésről, ami egyénileg történik, \nhogy minél több és minél változatosabb megoldások szülessenek a problémára, amik közül közösen választanak a résztvevők egyet, és ezt az utolsó \nnapon letesztelik.",
      "s-mdwds-chapter-4-title": "Crafting design systems",
      "s-mdwds-chapter-4-p1": "A design rendszerekhez számos fogalom kötődik, amikre valójában nincs egységes definíció. Minden vállalat másként építette be ezeket a \ntervezési megközelítéseket a munkafolyamataiba, így némileg mást jelentenek számukra. Mivel a design rendszerek nagyon forró témának \nszámítanak product design körökben, nagyon sok vállalat design csapata publikálja saját elveit, gondolatait és megközelítését, így alakítva \naz általános képet arról, hogy mit jelentenek az ehhez kapcsolódó fogalmak.",
      "s-mdwds-chapter-4-subtitle-1": "Principles (Szabályok)",
      "s-mdwds-chapter-4-subchapter-1-p1": "Ahhoz, hogy a tervezés egységesen, egy adott irányba történjen, meg kell határozni az alapvető szabályokat, amik kísérni fogják. Ez szükséges \nfeltétele egy jól működő rendszernek. Fontos, hogy a szabályok ne legyenek túl általánosak (szép, harmonikus, stb.), mivel ezek nem segítik a \ntervezést. Mindenki úgy ül neki a feladatnak, hogy tervez valami szépet. Helyette legyenek általános érvényűek, de elég konkrétak is. \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://developers.google.com/actions/design/principles\">A Google egyik szabálya például:</a>",
      "s-mdwds-chapter-4-subchapter-1-hl1": "Foglald le a kezdőket, és vonzd be a szakértőket. A sok emberre való tervezés nem egyenlő a legkisebb közös többszörösre való \ntervezéssel.",
      "s-mdwds-chapter-4-subchapter-1-p2": "Ez a szabály például segít abban, hogy a széles célcsoportra való tervezés ne menjen a funkcionalitás rovására. Elősegíti olyan felületek \ntervezését, amiket alapszinten könnyű megtanulni használni, azonban mellette elég összetettek ahhoz, hogy a jártasabb felhasználók igényeit \nis kielégítse.",
      "s-mdwds-chapter-4-subchapter-1-p3": "A design szabályok eltérhetnek egy vállalat csapatain belül. Egy admin felület tervezésénél például más szabályokat kell alkalmaznunk, mint \negy értékesítő oldalnál. Lehet, hogy az egyiknél jól működne mondjuk a szellős struktúra nagy, kihasználatlan helyekkel, a másiknál viszont \nnem. Attól, hogy a rendeltetéshez igazítjuk a szabályokat, még lehet hasonló az arculata a két különböző oldalnak.",
      "s-mdwds-chapter-4-subtitle-2": "Pattern Library (minta könyvtár)",
      "s-mdwds-chapter-4-subchapter-2-img1": "Részlet a Chameleon pattern library-jéből. Bizonyos elemeknek, mint például a fejléc és lábléc, több variációjuk is van. Ezek mint helyet \nkapnak a könyvtárban.",
      "s-mdwds-chapter-4-subchapter-2-p1": "A pattern (minta) egy felület ismétlődő eleme. Ha ezeket egy helyre összegyűjtjük, akkor egy olyan könyvtárat kapunk, ami tartalmazza azokat \naz építőelemeket, amikből egy felület jelentős része leképezhető. Ahhoz, hogy igazán effektív legyen ez a könyvtár, meg kell határoznunk azt \na szabályrendszert is, ami segít bennünket abban, hogy arra és úgy használjuk fel ezeket a komponenseket, amire tervezve lettek. A pattern \nlibrary-nek több szintje van. Egy kisebb vállalatnak lehet, hogy elég egy szerényebb gyűjteményt összeállítani Sketch-ben és Zeplinben vagy \nInVisionben közzétenni, míg egy nagyobb vállalat, ahol több embernek kell együtt dolgoznia, és ahol igazán fontos a design elemek- és a kód \nújrafelhasználhatósága, ott egy nagyon részletes könyvtárra van szükség, ami online elérhető, és a design patterneken kívül \nkódrészleteket is tartalmaz.",
      "s-mdwds-chapter-4-subtitle-3": "Style Guide (stílusszabályzat)",
      "s-mdwds-chapter-4-subchapter-3-p1": "A style guide a vállalat kevésbé konkretizálható vizuális- és verbális egységeinek alkalmazására ad útmutatást, mint például színek, \ntipográfia, illusztrációk- és ikonok stílusa, kommunikáció stílusa. Ezeket nem lehet olyan pontos szabályok közé szorítani, mint például \negy gombot, aminek az összes tulajdonsága CSS-sel leírható. A style guide és a pattern library kiegészítik egymást és együttesen alkalmazhatók \nigazán hatékonyan a tervezés folyamán.",
      "s-mdwds-chapter-4-subchapter-3-p2": "A style guide a legfontosabb állomás az egységes megjelenés kialakításában. Tegyük fel, hogy design folyamatainkban nem használunk \nkomponenseket. Ez némi inkonzisztenciát fog eredményezni, de koránt sem akkorát, mintha nem lennének egyezményesen meghatározva az alapvető \nstílusok, mint például a színek. Vagy ha a szöveges tartalmakat nézzük, gondoljunk csak bele, hogy mennyire furcsa felhasználói élményhez \nvezet, ha az egyik oldalon tegezzük a felhasználót, egy másikon pedig magázzuk.",
      "s-mdwds-chapter-4-subchapter-3-p3": "A UXPin a style guide-ot úgy határozza meg,\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.uxpin.com/studio/blog/design-systems-vs-pattern-libraries-vs-style-guides-whats-difference/\">mint \negy olyan egységet, ami összefogja a stílusokat, patterneket és szabályokat.</a> Így nézve a style guide a rendszerben nem egy különálló \nfejezet, hanem az összes fejezetnek egy kiegészítő eleme. Egy színpaletta önmagában nem írja le a stílust, ehhez ki kell egészíteni szöveges \nmagyarázattal.",
      "s-mdwds-chapter-4-subchapter-3-p4": "Ami érdekes, hogy ezzel szemben <a target=\"_blank\" class=\"t-article__a\" href=\"http://bradfrost.github.io/style-guide-guide/\">Brad Frost a \nstyle guide-ot a design rendszer megvalósult dokumentumának tekinti,</a> majdhogynem megegyező fogalomként alkalmazza a kettőt. Természetesen \nnincs értelme kifejezéseken ugrálni, valójában csak az a fontos, hogy vállalaton belül legyenek ezek a fogalmak tisztázva a félreértések \nelkerülése végett.",
      "s-mdwds-chapter-4-subtitle-4": "Design system (design rendszer)",
      "s-mdwds-chapter-4-subchapter-4-img1": "A Trello design rendszere egy nyilvánosan elérhető weboldal, ami tartalmazza a brand irányelveit, stílusait, komponenseit és a munkához \nszükséges letölthető anyagokat.",
      "s-mdwds-chapter-4-subchapter-4-p1": "A design rendszer a fentebb megfogalmazott részegységekből épül fel azzal a céllal, hogy előtérbe hozza az egységesítést, ami kiterjed \na vizuális és írott kommunikációs tartalomra.",
      "s-mdwds-chapter-4-subchapter-4-p2": "Ahány design rendszer, annyi megvalósítás, hiszen minden terméknek különbözik a célja, célcsoportja, fókusza, stb. Egy autómárka, mint \npéldául az Audi, nem fog akkora figyelmet fordítani a webes megjelenésére, mint egy olyan márka, aminek elsődleges terméke digitális alapú. \nA lényeg csak annyi, hogy segítse a különböző területen dolgozó embereket a kollaboratív tervezésben.",
      "s-mdwds-chapter-4-subchapter-4-p3": "Itt azonban felmerül kérdés, hogy milyen formában fog eljutni ez a sok információ a rendszer felhasználóihoz? A pattern library-nál már \nfelmerült az a megoldás, amit nagyobb cégek előszeretettel alkalmaznak, hogy egy erre a célra dedikált oldalon megtekinthető az összes \nkomponens demó verziója, az implementációs kódjával együtt. És ha már itt tartunk, miért ne kerülhetne fel ide az összes stílus, szabály \nés felhasználási javaslat is? Fontos könnyen elérhetővé tenni a rendszert, ha azt szeretnénk, hogy minél többen és minél többet használják. \nHa strukturálatlan  Drive mappák mélyéről kell kibányászni a szanaszét tartott dokumentumokat, akkor azzal nem csak nehezítjük a fejlesztését \nés karbantartását, de el is vesszük a felhasználók kedvét a használatától.",
      "s-mdwds-chapter-4-subchapter-4-p4": "Nathan Curtis az Atlassiantól így vélekedik a design rendszerről: \"A design rendszer nem egy projekt. Ez egy termék, ami termékeket szolgál ki.\" - \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://medium.com/eightshapes-llc/a-design-system-isn-t-a-project-it-s-a-product-serving-products-74dcfffef935\">Medium \ncikkjében írja,</a> hogy fontos, hogy mind a készítők, mind pedig a felhasználók tisztában legyenek azzal, hogy ez nem egy projekt, hanem egy \ntermék. Ez azt jelenti, hogy folyamatos erőforrást és költségvetést kell dedikálni a fenntartásához. Nem elég egyszer elkészíteni és \nelégedetten hátradőlni, mivel a termékek, amiket a rendszer szolgál, folyamatosan változni fognak. Ha a rendszer nem változik velük együtt, \nakkor el fog avulni. Sőt, a változásnak a rendszertől kell indulnia, és a termékeknek kell reagálniuk rá, nem pedig fordítva. Hasonló \ngondolatokat fogalmaz meg Brad Frost is <a target=\"_blank\" class=\"t-article__a\" href=\"http://atomicdesign.bradfrost.com/chapter-5/>az Atomic Design utolsó \nfejezetében,</a> amiben a design rendszerek fenntarthatóságáról ír.",
      "s-mdwds-chapter-4-subtitle-5": "Design language (design nyelv)",
      "s-mdwds-chapter-4-subchapter-5-p1": "A design nyelv valójában nem sokban különbözik a design rendszerektől, így nehéz megfogni, hogy mikor lép ki a határukból. Szerintem ez \nakkor történik meg, amikor nagyobb felhasználói közönségre tervezik a rendszert, mint maga a szervezet (habár \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://airbnb.design/the-way-we-build/>az Airbnb</a> és\n<a target=\"_blank\" class=\"t-article__a\" href=\"https://www.ibm.com/design/language/>az IBM</a> is language-nek nevezi a saját rendszerét, pedig nekik nem \ncéljuk a szervezeten kívüli terjesztés. Ez alapján egy másik olvasatban a két kifejezés szinonímaként is értelmezhető).",
      "s-mdwds-chapter-4-subchapter-5-p2": "A Material Designt ezzel szemben azonban kifejezetten azzal a céllal tervezte a Google, hogy univerzális szabályokat hozzon létre a \nfelhasználói élmény javítása érdekében. Nem kell túlragozni, hogy a Google-nek miért jó, ha mindenki az ő által megfogalmazott elveket \nköveti, azonban ami ennél fontosabb, hogy ez miért jó a felhasználó szervezeteknek, illetve az általuk létrehozott termékek felhasználóinak.",
      "s-mdwds-chapter-4-subchapter-5-p3": "Szervezeti szinten a legnagyobb előnye talán az, hogy biztosít egy alapot a saját rendszer felépítéséhez. Nehéz vitatkozni a komponens alapú \ntervezés előnyeivel és hatásosságával, azonban tény, hogy idő és erőforrás megfelelően kialakítani. A Material Design annyira bonyolult és \nösszetett, hogy ezt a részletességet a Google-ön kívül senki nem tudja kihasználni, azonban rengeteg pattern előre meg van benne tervezve, \namik feltehetően átfogó kutatások eredményeként jöttek létre, ezért célszerű építkezni ezekre, hogy felgyorsítsuk a tervezést.",
      "s-mdwds-chapter-4-subchapter-5-p4": "A felhasználókat pedig úgy segíti, hogy ahol Material Design patterneken alapuló komponensekkel találkoznak, ott gyorsabban megtanulják a \nfelületek használatát, mivel egészen biztosan találkoztak már hasonló megoldásokkal (ha máshol nem, a Google felületein biztosan, azokat \npedig nehéz elkerülni).",
      "s-mdwds-chapter-4-subtitle-6": "Design rendszerek előkészületei",
      "s-mdwds-chapter-4-subchapter-6-p1": "Egy napjainkban induló startup számára egyértelműen jó választás a tervezést design rendszerrel kezdeni, hiszen jelentősen csökkenti a termék \nkomplexitását, és segít abban, hogy köré egy erős és határozott brand épüljön. Nagyon sok pozitív vonzata is van a céges mentalitásra nézve, \nha a design központi szerepet kap: előtérbe kerülnek az egyszerű megoldások, a felhasználóközpontúság, és a megrendelők is jobban belelátnak, \nhogy miről szól a webes tervezés. A rendszert ők is bármikor felkereshetik és tanulmányozhatják, hiszen nagyon sok része van, ami érinti őket, \nés amihez hozzá tudnak tenni.",
      "s-mdwds-chapter-4-subchapter-6-p2": "Egy évek óta működő vállalatnál a design rendszer gondolata elég futurisztikusnak tűnhet elsőre, hiszen már kiépített, bonyolult rendszerek \nvannak, amit nem lehet egyik napról a másikra megváltoztatni. Azonban, ha a vállalat valóban hosszú távú célokat tűz ki maga elé, érdemes \nkis lépésekben közeledni felé, és időt és erőforrást szánni rá. Először érdemes azokra a problémákra koncentrálni, amiket viszonylag könnyű \nmegoldani, viszont sok terhet okoznak.",
      "s-mdwds-chapter-4-subchapter-6-p3": "A tervezés kezdetén érdemes feltenni pár kérdést, ami segít a rendszer céljának tisztázásában: kik fogják használni? Mi segítené őket a munkájuk \nminél hatékonyabb és minél magasabb színvonalú elvégzésében? Hol fogják elérni a rendszert? Mekkora erőforrást és költségvetést szán rá a \nszervezet? Kik dolgoznak majd rajta? Hogyan és kik által lesz frissítve? Kinek és milyen formában kell jelezni a hiányosságokat és a módosítási \nigényeket? Amíg ezek a kérdések nincsenek tisztázva, jó esély van arra, hogy már az elindulásának napján halálra lesz ítélve – éppen ezért érdemes \nfelmérést készíteni és alaposan megtervezni. Nincs értelme bemutatni egy olyan rendszert, amit a létrehozás után senki nem akar karbantartani, \nmert így nem fizetődik ki a kezdeti befektetett energia, ráadásul negatív visszhangja lesz a kezdeményezésnek. Ha rosszul kerül megtervezésre, \nés csak hátráltatja a munkavégzőket, értelmetlen keretek közé szorítja őket ahelyett, hogy megoldásokat nyújtana nekik, akkor nem fogják használni. \nEgy jó design rendszert nem kötelességből használnak, hanem azért, mert könnyebb általa a munka.",
      "s-mdwds-chapter-4-subchapter-6-p4": "Elég jó esély van arra is, hogy a fejlesztőktől és a designerektől megkapja a rendszer az induláshoz szükséges támogatást, azonban a vezetőség által \nnem kerül jóváhagyásra. Brad Frost erre ezt mondja: \"Kérj elfogadást, ne pedig engedélyt\" – ha egy csapat úgy gondolja, hogy szüksége van rá \n(márpedig jó eséllyel szüksége van rá), akkor saját dolga szakmájának legjobb gyakorlatait követnie.",
      "s-mdwds-chapter-4-subchapter-6-p5": "Lehet, hogy kezdetben elég, ha csak a design és a UI fejlesztési részleg számára készül, ebben az esetben például akár munka melletti projekt \nkeretei között is meg lehet tervezni, vagy akár egy hackathon kíséretében. Majd, amikor mindenki látja a hasznosságát, és egyre nagyobb figyelmet \nés támogatást kap, el lehet kezdeni kibővíteni.",
      "s-mdwds-chapter-4-subtitle-7": "Design rendszerek tervezése",
      "s-mdwds-chapter-4-subchapter-7-p1": "Az elmúlt másfél év során több design rendszer kialakításában játszottam aktív szerepet, legújabb projektem pedig a Chameleon volt, ami a \nlorant.design mögött működő rendszer. A Chameleon elég kisméretű, azonban teljeskörű, így megterveztem benne az újrafelhasználható Sketch \nszimbólumokat, az ezekhez tartozó <a target=\"_blank\" class=\"t-article__a\" href=\"http://riotjs.com/>Riot.js</a> alapú komponenseket, megírtam a tervezésnél \nhasznált szabályokat, valamint kitaláltam az oldal kommunikációs stílusát is. A következő sorokat személyes tapasztalataim támasztják alá.",
      "s-mdwds-chapter-4-subchapter-7-p2": "Ha a design rendszer túl sok opciót biztosít, akkor lassítja a döntéshozást - nehezebb feldolgozni az információt, és az emberi pszichológia \núgy működik, hogy az összes lehetőség ismeretében szeretne dönteni, <a target=\"_blank\" class=\"t-article__a\" href=\"https://markmanson.net/analysis-paralysis>mert \nfél attól, hogy van jobb választás,</a> csak nem találta még meg. Ha viszont túl kevés lehetőséget biztosít, akkor tervezni kell egy új, \nnem szabványos megoldást, egy \"kívánságpizzát\", ami drágább lesz, hiszen új komponenst kell fejleszteni. Emellett növelni fogja a rendszer \nkomplexitását is (képzeljük el, ha mindenki által rendelt \"kívánságpizza\" felkerülne az étlapra - a pár választásból hirtelen több száz lenne, \nköztük olyanok, amik alig térnek el egymástól).",
      "s-mdwds-chapter-4-subchapter-7-p3": "Egy jó design rendszer tehát az egyensúlyról szól: annyi választási lehetőséget biztosít, amennyire szükség van, de nem többet. Vannak design \nrendszerek, amik legalább 10 különböző árnyalatot nyújtanak színenként. Habár vannak szituációk, amikben indokolt lehet ez a széles színpaletta, \náltalában a túl sok választási lehetőség zavart és inkonzisztenciát okoz.",
      "s-mdwds-chapter-4-subchapter-7-p4": "Ennek az ellentétével is találkoztam már, amiben összesen 10-12 szín volt. Azzal magyarázták, hogy nem akarják, hogy túl színes legyen az oldal, \nmert egy komoly, letisztult és érett márkát kell reprezentálnia. Nem lepődtem meg nagyon, mikor átfuttattam az oldalt a \n<a target=\"_blank\" class=\"t-article__a\" href=\"https://cssstats.com/>CSS Stats</a> nevű webes alkalmazáson, ami összegyűjtötte az összes CSS-ben deklarált színt, \nés láttam, hogy számuk a 40-hez közelít. Egyszerűen nem lehet 10 színből interaktív felületet tervezni. Annyi állapotváltozás van, aminek hatására \nmeg kell változnia egy-egy elem színének, hogy egy ilyen döntés zsákutcába tereli a designt. A felületek úgy fognak kinézni, mintha drótvázak \nlennének, miközben számtalan új szín kerül meghatározásra, mert időnként jön egy-egy szituáció, amihez nincs megfelelő szín a készletben.",
      "s-mdwds-chapter-4-subchapter-7-p5": "A Chameleon tervezése közben egy olyan megközelítést alkalmaztam, aminek lényege az volt, hogy nem vezetek be egyedülálló színt, csak színcsaládot. \nA színcsaládok legalább két színből álltak, még akkor is, ha volt olyan, amit csak később, vagy esetleg még egyáltalán nem kellett felhasználnom. \nEz azért volt jó, mert amikor azonos színű, de más árnyalatú kiegészítőszínt kellett alkalmaznom, nem volt kérdés, hogy ez milyen legyen. Kisebb \nrendszerek esetben jól működhet ez a megközelítés, hiszen általában 2-3 árnyalatnál nincs szükség többre egy színből (kivéve a szürkét). Nagyobb \nrendszereknél pedig jól alkalmazható a <a target=\"_blank\" class=\"t-article__a\" href=\"https://material.io/guidelines/style/color.html>Material \nDesign-féle skála,</a> amiben a színek százas értékeket kapnak. Annyit kell csak bevezetni egyszerre, amennyire valóban szükség van, de az elnevezésnek \nköszönhetően bármikor bővíthető a készlet.",
      "s-mdwds-chapter-4-subchapter-7-p6": "A rendszer vizuális megjelenésének tervezése közben érdemes lehet már a szabályokra is gondolni. Ha egymástól elszeparálva készülnek el a szabályok \nés a vizuális egységek, akkor meglehet, hogy nem lesznek összhangban. A tervezés egy hosszú kísérletezés, aminek irányított módon kell történnie. \nA Chameleon utolsó szabályának például ezt fogalmaztam meg: \"Kísérletezés támogatása: teret kell adni a kísérletezésnek a lenyűgöző eredmény eléréséhez.\" \nEz azt jelenti, hogy a tervezési folyamatok alatt minél jobban törekedni kell a különböző, és minél változatosabb megoldások készítésére, bevállalva \naz esetleges fejlesztési nehézségeket, vagy a kudarcot. Ahhoz, hogy ez a szemlélet ki tudjon bontakozni (főleg egy olyan szervezetben, amiben többen \ndolgoznak közösen), fontos minél korábban meghatározni.",
      "s-mdwds-chapter-4-subchapter-7-p7": "A design rendszerek alkalmazása egy általános legjobb gyakorlat lett az utóbbi években, és habár legtöbbet a tech óriások rendszereire hivatkoznak, \naz ezeknél sokkal kisebb vállalatok is profitálhatnak egy saját rendszerből. A legfontosabb, amit észben kell tartani tervezésüknél, hogy ez egy \nvégtelen folyamat kezdete. Amíg a termékek élnek, amiket támogat, addig a rendszert nem lehet magára hagyni. Ha úgy tűnik, hogy túl sok erőforrást \nemészt fel, vagy nem térül meg, akkor feltehetően tervezési probléma áll a háttérben. A design rendszer rossz kérdésekre ad választ, vagy nem megfelelő \nválaszt ad a kérdésekre.",
      "s-mdwds-caption-tcds": "Több saját példát is mutattam az oldalam mögött álló design rendszerből. Ha felkeltettem az érdeklődésedet, itt olvashatsz róla részletesebben:"
    }
  }